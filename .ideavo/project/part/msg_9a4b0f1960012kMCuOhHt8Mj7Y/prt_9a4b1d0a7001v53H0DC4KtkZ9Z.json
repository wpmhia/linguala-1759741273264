{
  "id": "prt_9a4b1d0a7001v53H0DC4KtkZ9Z",
  "messageID": "msg_9a4b0f1960012kMCuOhHt8Mj7Y",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "edit",
  "callID": "toolu_01Bys2enhbnBnrSodLu64fGs",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/prisma/schema.prisma",
      "oldString": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}",
      "newString": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\n// Auth.js required models\nmodel Account {\n  id                String  @id @default(cuid())\n  userId            String\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String? @db.Text\n  access_token      String? @db.Text\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String? @db.Text\n  session_state     String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel User {\n  id            String    @id @default(cuid())\n  name          String?\n  email         String?   @unique\n  emailVerified DateTime?\n  image         String?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  accounts           Account[]\n  sessions           Session[]\n  translations       Translation[]\n  glossaryEntries    GlossaryEntry[]\n  translationHistory TranslationHistory[]\n\n  @@map(\"users\")\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n}\n\n// Translator-specific models\nmodel Translation {\n  id             String   @id @default(cuid())\n  sourceText     String   @db.Text\n  translatedText String   @db.Text\n  sourceLang     String\n  targetLang     String\n  domain         String   @default(\"general\")\n  userId         String\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, createdAt])\n}\n\nmodel GlossaryEntry {\n  id       String  @id @default(cuid())\n  source   String\n  target   String\n  domain   String  @default(\"general\")\n  notes    String?\n  userId   String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, domain])\n  @@unique([userId, source, domain])\n}\n\nmodel TranslationHistory {\n  id             String   @id @default(cuid())\n  sourceText     String   @db.Text\n  translatedText String   @db.Text\n  sourceLang     String\n  targetLang     String\n  domain         String   @default(\"general\")\n  userId         String\n  createdAt      DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, createdAt])\n}"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "diff": "Index: /home/user/project/prisma/schema.prisma\n===================================================================\n--- /home/user/project/prisma/schema.prisma\n+++ /home/user/project/prisma/schema.prisma\n@@ -7,5 +7,108 @@\n \n datasource db {\n   provider = \"postgresql\"\n   url      = env(\"DATABASE_URL\")\n+  directUrl = env(\"DIRECT_URL\")\n }\n+\n+// Auth.js required models\n+model Account {\n+  id                String  @id @default(cuid())\n+  userId            String\n+  type              String\n+  provider          String\n+  providerAccountId String\n+  refresh_token     String? @db.Text\n+  access_token      String? @db.Text\n+  expires_at        Int?\n+  token_type        String?\n+  scope             String?\n+  id_token          String? @db.Text\n+  session_state     String?\n+\n+  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n+\n+  @@unique([provider, providerAccountId])\n+}\n+\n+model Session {\n+  id           String   @id @default(cuid())\n+  sessionToken String   @unique\n+  userId       String\n+  expires      DateTime\n+  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n+}\n+\n+model User {\n+  id            String    @id @default(cuid())\n+  name          String?\n+  email         String?   @unique\n+  emailVerified DateTime?\n+  image         String?\n+  createdAt     DateTime  @default(now())\n+  updatedAt     DateTime  @updatedAt\n+\n+  accounts           Account[]\n+  sessions           Session[]\n+  translations       Translation[]\n+  glossaryEntries    GlossaryEntry[]\n+  translationHistory TranslationHistory[]\n+\n+  @@map(\"users\")\n+}\n+\n+model VerificationToken {\n+  identifier String\n+  token      String   @unique\n+  expires    DateTime\n+\n+  @@unique([identifier, token])\n+}\n+\n+// Translator-specific models\n+model Translation {\n+  id             String   @id @default(cuid())\n+  sourceText     String   @db.Text\n+  translatedText String   @db.Text\n+  sourceLang     String\n+  targetLang     String\n+  domain         String   @default(\"general\")\n+  userId         String\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+\n+  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n+\n+  @@index([userId, createdAt])\n+}\n+\n+model GlossaryEntry {\n+  id       String  @id @default(cuid())\n+  source   String\n+  target   String\n+  domain   String  @default(\"general\")\n+  notes    String?\n+  userId   String\n+  createdAt DateTime @default(now())\n+  updatedAt DateTime @updatedAt\n+\n+  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n+\n+  @@index([userId, domain])\n+  @@unique([userId, source, domain])\n+}\n+\n+model TranslationHistory {\n+  id             String   @id @default(cuid())\n+  sourceText     String   @db.Text\n+  translatedText String   @db.Text\n+  sourceLang     String\n+  targetLang     String\n+  domain         String   @default(\"general\")\n+  userId         String\n+  createdAt      DateTime @default(now())\n+\n+  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n+\n+  @@index([userId, createdAt])\n+}\n"
    },
    "title": "prisma/schema.prisma",
    "time": {
      "start": 1759404750280,
      "end": 1759404750293
    }
  }
}
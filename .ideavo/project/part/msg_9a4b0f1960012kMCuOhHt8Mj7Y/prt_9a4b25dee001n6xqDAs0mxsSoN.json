{
  "id": "prt_9a4b25dee001n6xqDAs0mxsSoN",
  "messageID": "msg_9a4b0f1960012kMCuOhHt8Mj7Y",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "write",
  "callID": "toolu_01JZ9kTZ1rgDU8n89KBC3jN7",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/lib/auth.ts",
      "content": "import { NextAuthOptions } from \"next-auth\"\nimport { PrismaAdapter } from \"@auth/prisma-adapter\"\nimport { prisma } from \"@/lib/prisma\"\nimport GoogleProvider from \"next-auth/providers/google\"\nimport GitHubProvider from \"next-auth/providers/github\"\nimport EmailProvider from \"next-auth/providers/email\"\n\nexport const authOptions: NextAuthOptions = {\n  adapter: PrismaAdapter(prisma) as any,\n  providers: [\n    // Email provider for magic link authentication\n    EmailProvider({\n      server: {\n        host: process.env.EMAIL_SERVER_HOST,\n        port: process.env.EMAIL_SERVER_PORT,\n        auth: {\n          user: process.env.EMAIL_SERVER_USER,\n          pass: process.env.EMAIL_SERVER_PASSWORD,\n        },\n      },\n      from: process.env.EMAIL_FROM,\n    }),\n    \n    // Google OAuth provider\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID || \"\",\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET || \"\",\n    }),\n    \n    // GitHub OAuth provider\n    GitHubProvider({\n      clientId: process.env.GITHUB_CLIENT_ID || \"\",\n      clientSecret: process.env.GITHUB_CLIENT_SECRET || \"\",\n    }),\n  ],\n  \n  session: {\n    strategy: \"database\",\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  \n  pages: {\n    signIn: '/auth/signin',\n    signOut: '/auth/signout',\n    error: '/auth/error',\n    verifyRequest: '/auth/verify-request',\n  },\n  \n  callbacks: {\n    async session({ session, user }) {\n      if (session?.user) {\n        session.user.id = user.id\n      }\n      return session\n    },\n  },\n  \n  events: {\n    async createUser({ user }) {\n      console.log(`New user created: ${user.email}`)\n    },\n  },\n}"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "filepath": "/home/user/project/lib/auth.ts",
      "exists": false
    },
    "title": "lib/auth.ts",
    "time": {
      "start": 1759404782722,
      "end": 1759404782722
    }
  }
}
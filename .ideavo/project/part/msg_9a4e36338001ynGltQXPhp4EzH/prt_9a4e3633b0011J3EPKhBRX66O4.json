{
  "id": "prt_9a4e3633b0011J3EPKhBRX66O4",
  "type": "text",
  "text": "Build Error\nFailed to compile\n\nNext.js (14.2.31) is outdated (learn more)\n./components/linguala-translator.tsx\nError: \n  x Return statement is not allowed here\n      ,-[/home/user/project/components/linguala-translator.tsx:497:1]\n  497 |         getLanguageName(item.targetLang).toLowerCase().includes(historySearch.toLowerCase())\n  498 |       )\n  499 |     \n  500 | ,->   return (\n  501 | |       <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/50\">\n  502 | |         {/* Premium Header */}\n  503 | |         <header className=\"bg-white/80 backdrop-blur-lg border-b border-gray-200/50 sticky top-0 z-50\">\n  504 | |           <div className=\"max-w-7xl mx-auto px-4 py-4\">\n  505 | |             <div className=\"flex items-center justify-between\">\n  506 | |               <LingualaLogo size=\"lg\" />\n  507 | |               \n  508 | |               <div className=\"flex items-center space-x-4\">\n  509 | |                 {/* Stats for authenticated users */}\n  510 | |                 {session?.user && (\n  511 | |                   <div className=\"hidden md:flex items-center space-x-4 text-sm text-gray-600\">\n  512 | |                     <div className=\"flex items-center space-x-1\">\n  513 | |                       <History className=\"h-4 w-4\" />\n  514 | |                       <span>{history.length} translations</span>\n  515 | |                     </div>\n  516 | |                     <div className=\"flex items-center space-x-1\">\n  517 | |                       <BookOpen className=\"h-4 w-4\" />\n  518 | |                       <span>{glossary.length} terms</span>\n  519 | |                     </div>\n  520 | |                   </div>\n  521 | |                 )}\n  522 | |                 \n  523 | |                 <UserProfile />\n  524 | |               </div>\n  525 | |             </div>\n  526 | |           </div>\n  527 | |         </header>\n  528 | |   \n  529 | |         <main className=\"max-w-7xl mx-auto px-4 py-8\">\n  530 | |           {/* Domain Selection - Only for authenticated users */}\n  531 | |           {session?.user && (\n  532 | |             <div className=\"text-center mb-8\">\n  533 | |               <div className=\"flex flex-wrap justify-center gap-3 mb-8\">\n  534 | |                 {DOMAINS.map(domain => {\n  535 | |                   const IconComponent = domain.icon\n  536 | |                   return (\n  537 | |                     <Button\n  538 | |                       key={domain.code}\n  539 | |                       variant={selectedDomain === domain.code ? \"default\" : \"outline\"}\n  540 | |                       size=\"sm\"\n  541 | |                       onClick={() => setSelectedDomain(domain.code)}\n  542 | |                       className={`flex items-center space-x-2 transition-all duration-200 ${\n  543 | |                         selectedDomain === domain.code \n  544 | |                           ? `${domain.color} text-white hover:opacity-90` \n  545 | |                           : \"hover:scale-105\"\n  546 | |                       }`}\n  547 | |                     >\n  548 | |                       <IconComponent className=\"h-4 w-4\" />\n  549 | |                       <span>{domain.name}</span>\n  550 | |                     </Button>\n  551 | |                   )\n  552 | |                 })}\n  553 | |               </div>\n  554 | |             </div>\n  555 | |           )}\n  556 | |   \n  557 | |   \n  558 | |   \n  559 | |           {/* Main Translation Interface */}\n  560 | |           <Card className=\"shadow-2xl border-0 bg-white/95 backdrop-blur-sm mb-8\">\n  561 | |             <CardHeader className=\"pb-4\">\n  562 | |               <div className=\"flex items-center justify-between\">\n  563 | |                 <div className=\"flex items-center space-x-4\">\n  564 | |                   {/* Current domain - Only for authenticated users */}\n  565 | |                   {session?.user && (\n  566 | |                     <Badge variant=\"secondary\" className=\"flex items-center space-x-1\">\n  567 | |                       <div className={`w-2 h-2 rounded-full ${getDomainInfo(selectedDomain).color}`} />\n  568 | |                       <span>{getDomainInfo(selectedDomain).name}</span>\n  569 | |                     </Badge>\n  570 | |                   )}\n  571 | |                 </div>\n  572 | |   \n  573 | |                 {/* Action Buttons - Only for authenticated users */}\n  574 | |                 {session?.user && (\n  575 | |                   <div className=\"flex items-center space-x-2\">\n  576 | |                   <Dialog open={showGlossary} onOpenChange={setShowGlossary}>\n  577 | |                     <DialogTrigger asChild>\n  578 | |                       <Button variant=\"outline\" size=\"sm\">\n  579 | |                         <BookOpen className=\"h-4 w-4 mr-2\" />\n  580 | |                         Glossary\n  581 | |                         <Badge variant=\"secondary\" className=\"ml-2\">{glossary.length}</Badge>\n  582 | |                       </Button>\n  583 | |                     </DialogTrigger>\n  584 | |                     <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n  585 | |                       <DialogHeader>\n  586 | |                         <DialogTitle className=\"flex items-center space-x-2\">\n  587 | |                           <BookOpen className=\"h-5 w-5\" />\n  588 | |                           <span>Custom Glossary</span>\n  589 | |                         </DialogTitle>\n  590 | |                       </DialogHeader>\n  591 | |                       <Tabs defaultValue=\"manage\" className=\"w-full\">\n  592 | |                         <TabsList>\n  593 | |                           <TabsTrigger value=\"manage\">Manage Terms</TabsTrigger>\n  594 | |                           <TabsTrigger value=\"add\">Add New Term</TabsTrigger>\n  595 | |                         </TabsList>\n  596 | |                         <TabsContent value=\"manage\" className=\"space-y-4\">\n  597 | |                           <div className=\"grid gap-4 max-h-96 overflow-y-auto\">\n  598 | |                             {glossary.length === 0 ? (\n  599 | |                               <div className=\"text-center py-12\">\n  600 | |                                 <BookOpen className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n  601 | |                                 <p className=\"text-gray-500\">No glossary entries yet.</p>\n  602 | |                                 <p className=\"text-sm text-gray-400\">Add custom terms to improve translation accuracy.</p>\n  603 | |                               </div>\n  604 | |                             ) : (\n  605 | |                               glossary.map(entry => (\n  606 | |                                 <div key={entry.id} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\">\n  607 | |                                   <div className=\"flex-1\">\n  608 | |                                     <div className=\"flex items-center space-x-3\">\n  609 | |                                       <span className=\"font-medium text-gray-900\">{entry.source}</span>\n  610 | |                                       <ChevronRight className=\"h-4 w-4 text-gray-400\" />\n  611 | |                                       <span className=\"text-blue-600 font-medium\">{entry.target}</span>\n  612 | |                                       <Badge variant=\"outline\" className=\"text-xs\">\n  613 | |                                         {getDomainInfo(entry.domain).name}\n  614 | |                                       </Badge>\n  615 | |                                     </div>\n  616 | |                                     {entry.notes && (\n  617 | |                                       <p className=\"text-sm text-gray-600 mt-1\">{entry.notes}</p>\n  618 | |                                     )}\n  619 | |                                   </div>\n  620 | |                                   <Button\n  621 | |                                     variant=\"ghost\"\n  622 | |                                     size=\"sm\"\n  623 | |                                     onClick={() => removeGlossaryEntry(entry.id)}\n  624 | |                                     className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n  625 | |                                   >\n  626 | |                                     <Trash2 className=\"h-4 w-4\" />\n  627 | |                                   </Button>\n  628 | |                                 </div>\n  629 | |                               ))\n  630 | |                             )}\n  631 | |                           </div>\n  632 | |                         </TabsContent>\n  633 | |                         <TabsContent value=\"add\" className=\"space-y-4\">\n  634 | |                           <div className=\"grid grid-cols-2 gap-4\">\n  635 | |                             <div>\n  636 | |                               <Label htmlFor=\"source-term\">Source Term</Label>\n  637 | |                               <Input\n  638 | |                                 id=\"source-term\"\n  639 | |                                 value={newGlossaryEntry.source}\n  640 | |                                 onChange={(e) => setNewGlossaryEntry(prev => ({ ...prev, source: e.target.value }))}\n  641 | |                                 placeholder=\"Enter source term\"\n  642 | |                                 className=\"mt-1\"\n  643 | |                               />\n  644 | |                             </div>\n  645 | |                             <div>\n  646 | |                               <Label htmlFor=\"target-term\">Target Term</Label>\n  647 | |                               <Input\n  648 | |                                 id=\"target-term\"\n  649 | |                                 value={newGlossaryEntry.target}\n  650 | |                                 onChange={(e) => setNewGlossaryEntry(prev => ({ ...prev, target: e.target.value }))}\n  651 | |                                 placeholder=\"Enter target term\"\n  652 | |                                 className=\"mt-1\"\n  653 | |                               />\n  654 | |                             </div>\n  655 | |                           </div>\n  656 | |                           <div>\n  657 | |                             <Label htmlFor=\"notes\">Context & Notes</Label>\n  658 | |                             <Input\n  659 | |                               id=\"notes\"\n  660 | |                               value={newGlossaryEntry.notes}\n  661 | |                               onChange={(e) => setNewGlossaryEntry(prev => ({ ...prev, notes: e.target.value }))}\n  662 | |                               placeholder=\"Add context, usage notes, or examples\"\n  663 | |                               className=\"mt-1\"\n  664 | |                             />\n  665 | |                           </div>\n  666 | |                           <Button onClick={addGlossaryEntry} className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700\">\n  667 | |                             <Plus className=\"h-4 w-4 mr-2\" />\n  668 | |                             Add to Glossary\n  669 | |                           </Button>\n  670 | |                         </TabsContent>\n  671 | |                       </Tabs>\n  672 | |                     </DialogContent>\n  673 | |                   </Dialog>\n  674 | |   \n  675 | |                   <Dialog open={showHistory} onOpenChange={setShowHistory}>\n  676 | |                     <DialogTrigger asChild>\n  677 | |                       <Button variant=\"outline\" size=\"sm\">\n  678 | |                         <History className=\"h-4 w-4 mr-2\" />\n  679 | |                         History\n  680 | |                         <Badge variant=\"secondary\" className=\"ml-2\">{history.length}</Badge>\n  681 | |                       </Button>\n  682 | |                     </DialogTrigger>\n  683 | |                     <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n  684 | |                       <DialogHeader>\n  685 | |                         <DialogTitle className=\"flex items-center space-x-2\">\n  686 | |                           <History className=\"h-5 w-5\" />\n  687 | |                           <span>Translation History</span>\n  688 | |                         </DialogTitle>\n  689 | |                       </DialogHeader>\n  690 | |                       <div className=\"space-y-4\">\n  691 | |                         <div className=\"flex items-center space-x-2\">\n  692 | |                           <div className=\"relative flex-1\">\n  693 | |                             <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n  694 | |                             <Input\n  695 | |                               value={historySearch}\n  696 | |                               onChange={(e) => setHistorySearch(e.target.value)}\n  697 | |                               placeholder=\"Search translations...\"\n  698 | |                               className=\"pl-10\"\n  699 | |                             />\n  700 | |                           </div>\n  701 | |                           <Button \n  702 | |                             variant=\"outline\" \n  703 | |                             size=\"sm\"\n  704 | |                             onClick={() => setHistory([])}\n  705 | |                             className=\"text-red-600 hover:text-red-700\"\n  706 | |                           >\n  707 | |                             <Trash2 className=\"h-4 w-4 mr-2\" />\n  708 | |                             Clear All\n  709 | |                           </Button>\n  710 | |                         </div>\n  711 | |                         \n  712 | |                         <div className=\"grid gap-3 max-h-96 overflow-y-auto\">\n  713 | |                           {filteredHistory.length === 0 ? (\n  714 | |                             <div className=\"text-center py-12\">\n  715 | |                               <History className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n  716 | |                               <p className=\"text-gray-500\">\n  717 | |                                 {historySearch ? \"No matching translations found.\" : \"No translation history yet.\"}\n  718 | |                               </p>\n  719 | |                             </div>\n  720 | |                           ) : (\n  721 | |                             filteredHistory.map(item => (\n  722 | |                               <div key={item.id} className=\"p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors\">\n  723 | |                                 <div className=\"flex items-center justify-between mb-2\">\n  724 | |                                   <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n  725 | |                                     <span className=\"font-medium\">{getLanguageName(item.sourceLang)}</span>\n  726 | |                                     <ChevronRight className=\"h-3 w-3\" />\n  727 | |                                     <span className=\"font-medium\">{getLanguageName(item.targetLang)}</span>\n  728 | |                                     <Badge variant=\"outline\" className=\"text-xs\">\n  729 | |                                       {getDomainInfo(item.domain).name}\n  730 | |                                     </Badge>\n  731 | |                                     <span>•</span>\n  732 | |                                     <span>{new Date(item.timestamp).toLocaleDateString()}</span>\n  733 | |                                   </div>\n  734 | |                                   <Button\n  735 | |                                     variant=\"ghost\"\n  736 | |                                     size=\"sm\"\n  737 | |                                     onClick={() => copyToClipboard(item.translatedText)}\n  738 | |                                   >\n  739 | |                                     <Copy className=\"h-4 w-4\" />\n  740 | |                                   </Button>\n  741 | |                                 </div>\n  742 | |                                 <div className=\"space-y-1\">\n  743 | |                                   <p className=\"text-sm text-gray-700\">{item.sourceText}</p>\n  744 | |                                   <p className=\"text-sm text-blue-600 font-medium\">{item.translatedText}</p>\n  745 | |                                 </div>\n  746 | |                               </div>\n  747 | |                             ))\n  748 | |                           )}\n  749 | |                         </div>\n  750 | |                       </div>\n  751 | |                     </DialogContent>\n  752 | |                   </Dialog>\n  753 | |                   </div>\n  754 | |                 )}\n  755 | |               </div>\n  756 | |             </CardHeader>\n  757 | |   \n  758 | |             <CardContent className=\"space-y-6\">\n  759 | |               {/* Language Selection */}\n  760 | |               <div className=\"flex items-center justify-center space-x-4\">\n  761 | |                 <Select value={sourceLang} onValueChange={(value) => {\n  762 | |                   setSourceLang(value)\n  763 | |                   if (sourceText.trim()) translateText(sourceText, value, targetLang)\n  764 | |                 }}>\n  765 | |                   <SelectTrigger className=\"w-48 h-12 border-2 border-gray-200 hover:border-blue-400 focus:border-blue-500 transition-colors\">\n  766 | |                     <SelectValue />\n  767 | |                   </SelectTrigger>\n  768 | |                   <SelectContent>\n  769 | |                     <div className=\"p-2\">\n  770 | |                       <div className=\"text-xs font-semibold text-gray-500 mb-2\">POPULAR</div>\n  771 | |                       {LANGUAGES.filter(lang => lang.popular).map(lang => (\n  772 | |                         <SelectItem key={lang.code} value={lang.code} className=\"flex items-center\">\n  773 | |                           <div className=\"flex items-center space-x-2\">\n  774 | |                             <span>{lang.name}</span>\n  775 | |                             {lang.region !== \"auto\" && (\n  776 | |                               <Badge variant=\"outline\" className=\"text-xs\">{lang.region}</Badge>\n  777 | |                             )}\n  778 | |                           </div>\n  779 | |                         </SelectItem>\n  780 | |                       ))}\n  781 | |                       <Separator className=\"my-2\" />\n  782 | |                       <div className=\"text-xs font-semibold text-gray-500 mb-2\">ALL LANGUAGES</div>\n  783 | |                       {LANGUAGES.filter(lang => !lang.popular).map(lang => (\n  784 | |                         <SelectItem key={lang.code} value={lang.code}>\n  785 | |                           <div className=\"flex items-center space-x-2\">\n  786 | |                             <span>{lang.name}</span>\n  787 | |                             <Badge variant=\"outline\" className=\"text-xs\">{lang.region}</Badge>\n  788 | |                           </div>\n  789 | |                         </SelectItem>\n  790 | |                       ))}\n  791 | |                     </div>\n  792 | |                   </SelectContent>\n  793 | |                 </Select>\n  794 | |   \n  795 | |                 <Button\n  796 | |                   variant=\"ghost\"\n  797 | |                   size=\"lg\"\n  798 | |                   onClick={swapLanguages}\n  799 | |                   disabled={sourceLang === \"auto\"}\n  800 | |                   className=\"p-3 rounded-full hover:bg-blue-50 hover:text-blue-600 transition-all duration-200 hover:scale-110 disabled:opacity-50 disabled:cursor-not-allowed\"\n  801 | |                 >\n  802 | |                   <ArrowUpDown className=\"h-5 w-5\" />\n  803 | |                 </Button>\n  804 | |   \n  805 | |                 <Select value={targetLang} onValueChange={(value) => {\n  806 | |                   setTargetLang(value)\n  807 | |                   if (sourceText.trim()) translateText(sourceText, sourceLang, value)\n  808 | |                 }}>\n  809 | |                   <SelectTrigger className=\"w-48 h-12 border-2 border-gray-200 hover:border-blue-400 focus:border-blue-500 transition-colors\">\n  810 | |                     <SelectValue />\n  811 | |                   </SelectTrigger>\n  812 | |                   <SelectContent>\n  813 | |                     <div className=\"p-2\">\n  814 | |                       <div className=\"text-xs font-semibold text-gray-500 mb-2\">POPULAR</div>\n  815 | |                       {LANGUAGES.filter(lang => lang.popular && lang.code !== \"auto\").map(lang => (\n  816 | |                         <SelectItem key={lang.code} value={lang.code}>\n  817 | |                           <div className=\"flex items-center space-x-2\">\n  818 | |                             <span>{lang.name}</span>\n  819 | |                             <Badge variant=\"outline\" className=\"text-xs\">{lang.region}</Badge>\n  820 | |                           </div>\n  821 | |                         </SelectItem>\n  822 | |                       ))}\n  823 | |                       <Separator className=\"my-2\" />\n  824 | |                       <div className=\"text-xs font-semibold text-gray-500 mb-2\">ALL LANGUAGES</div>\n  825 | |                       {LANGUAGES.filter(lang => !lang.popular && lang.code !== \"auto\").map(lang => (\n  826 | |                         <SelectItem key={lang.code} value={lang.code}>\n  827 | |                           <div className=\"flex items-center space-x-2\">\n  828 | |                             <span>{lang.name}</span>\n  829 | |                             <Badge variant=\"outline\" className=\"text-xs\">{lang.region}</Badge>\n  830 | |                           </div>\n  831 | |                         </SelectItem>\n  832 | |                       ))}\n  833 | |                     </div>\n  834 | |                   </SelectContent>\n  835 | |                 </Select>\n  836 | |               </div>\n  837 | |   \n  838 | |               {/* Translation Areas */}\n  839 | |               <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n  840 | |                 {/* Source Text */}\n  841 | |                 <div className=\"space-y-3\">\n  842 | |                   <div className=\"flex items-center justify-between\">\n  843 | |                     <Label className=\"text-base font-semibold text-gray-700 flex items-center space-x-2\">\n  844 | |                       <Globe className=\"h-4 w-4\" />\n  845 | |                       <span>{getLanguageName(sourceLang)}</span>\n  846 | |                     </Label>\n  847 | |                     {sourceText && (\n  848 | |                       <Button\n  849 | |                         variant=\"ghost\"\n  850 | |                         size=\"sm\"\n  851 | |                         onClick={() => playAudio(sourceText, sourceLang)}\n  852 | |                         className=\"text-gray-500 hover:text-blue-600\"\n  853 | |                       >\n  854 | |                         <Volume2 className=\"h-4 w-4\" />\n  855 | |                       </Button>\n  856 | |                     )}\n  857 | |                   </div>\n  858 | |                   <div className=\"relative\">\n  859 | |                     <Textarea\n  860 | |                       value={sourceText}\n  861 | |                       onChange={(e) => handleSourceTextChange(e.target.value)}\n  862 | |                       placeholder=\"Enter text to translate...\"\n  863 | |                       className=\"min-h-[200px] text-base border-2 border-gray-200 focus:border-blue-500 transition-colors resize-none\"\n  864 | |                     />\n  865 | |                     <div className=\"absolute bottom-2 right-2 flex items-center space-x-2\">\n  866 | |                       <div className={`text-xs ${\n  867 | |                         sourceText.length > 4500 ? 'text-red-500 font-semibold' : \n  868 | |                         sourceText.length > 4000 ? 'text-orange-500' :\n  869 | |                         'text-gray-400'\n  870 | |                       }`}>\n  871 | |                         {sourceText.length} / 5000\n  872 | |                       </div>\n  873 | |                       {sourceText.length > 4500 && (\n  874 | |                         <AlertCircle className=\"h-4 w-4 text-red-500\" />\n  875 | |                       )}\n  876 | |                     </div>\n  877 | |                   </div>\n  878 | |                 </div>\n  879 | |   \n  880 | |                 {/* Translated Text */}\n  881 | |                 <div className=\"space-y-3\">\n  882 | |                   <div className=\"flex items-center justify-between\">\n  883 | |                     <Label className=\"text-base font-semibold text-gray-700 flex items-center space-x-2\">\n  884 | |                       <Sparkles className=\"h-4 w-4\" />\n  885 | |                       <span>{getLanguageName(targetLang)}</span>\n  886 | |                     </Label>\n  887 | |                     <div className=\"flex items-center space-x-2\">\n  888 | |                       {translatedText && (\n  889 | |                         <>\n  890 | |                           <Button\n  891 | |                             variant=\"ghost\"\n  892 | |                             size=\"sm\"\n  893 | |                             onClick={() => playAudio(translatedText, targetLang)}\n  894 | |                             className=\"text-gray-500 hover:text-blue-600\"\n  895 | |                           >\n  896 | |                             <Volume2 className=\"h-4 w-4\" />\n  897 | |                           </Button>\n  898 | |                           <Button\n  899 | |                             variant=\"ghost\"\n  900 | |                             size=\"sm\"\n  901 | |                             onClick={() => copyToClipboard(translatedText)}\n  902 | |                             className=\"text-gray-500 hover:text-blue-600\"\n  903 | |                           >\n  904 | |                             {copySuccess ? <Check className=\"h-4 w-4 text-green-600\" /> : <Copy className=\"h-4 w-4\" />}\n  905 | |                           </Button>\n  906 | |                         </>\n  907 | |                       )}\n  908 | |                     </div>\n  909 | |                   </div>\n  910 | |                   <div className=\"relative\">\n  911 | |                     <Textarea\n  912 | |                       value={translatedText}\n  913 | |                       readOnly\n  914 | |                       placeholder={isTranslating ? \"Translating...\" : \"Translation will appear here\"}\n  915 | |                       className=\"min-h-[200px] text-base bg-gradient-to-br from-blue-50/50 to-indigo-50/50 border-2 border-gray-200 focus:border-blue-500 transition-colors resize-none\"\n  916 | |                     />\n  917 | |                     {isTranslating && translationProgress > 0 && (\n  918 | |                       <div className=\"absolute bottom-2 left-2 right-2\">\n  919 | |                         <div className=\"bg-white/80 rounded-full p-2\">\n  920 | |                           <div className=\"flex items-center space-x-2\">\n  921 | |                             <Sparkles className=\"h-3 w-3 text-blue-500 animate-pulse\" />\n  922 | |                             <div className=\"flex-1 bg-gray-200 rounded-full h-1\">\n  923 | |                               <div \n  924 | |                                 className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-1 rounded-full transition-all duration-300\"\n  925 | |                                 style={{ width: `${translationProgress}%` }}\n  926 | |                               />\n  927 | |                             </div>\n  928 | |                             <span className=\"text-xs text-gray-600\">{Math.round(translationProgress)}%</span>\n  929 | |                           </div>\n  930 | |                         </div>\n  931 | |                       </div>\n  932 | |                     )}\n  933 | |                   </div>\n  934 | |                 </div>\n  935 | |               </div>\n  936 | |   \n  937 | |   \n  938 | |             </CardContent>\n  939 | |           </Card>\n  940 | |   \n  941 | |           {/* Features unlock section - for anonymous users */}\n  942 | |           {!session?.user && (\n  943 | |             <div className=\"max-w-4xl mx-auto mb-8\">\n  944 | |               <Card className=\"bg-gradient-to-br from-blue-50 to-indigo-50 border-blue-200\">\n  945 | |                 <CardContent className=\"p-8\">\n  946 | |                   <div className=\"text-center mb-8\">\n  947 | |                     <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n  948 | |                       Unlock Professional European Translation\n  949 | |                     </h2>\n  950 | |                     <p className=\"text-lg text-gray-600\">\n  951 | |                       Join thousands of European professionals using advanced translation tools\n  952 | |                     </p>\n  953 | |                   </div>\n  954 | |                   \n  955 | |                   <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n  956 | |                     {/* Domain Expertise */}\n  957 | |                     <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n  958 | |                       <div className=\"flex items-center mb-4\">\n  959 | |                         <div className=\"p-3 rounded-full bg-purple-500\">\n  960 | |                           <Brain className=\"h-6 w-6 text-white\" />\n  961 | |                         </div>\n  962 | |                         <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Domain Expertise</h3>\n  963 | |                       </div>\n  964 | |                       <p className=\"text-gray-600 text-sm leading-relaxed\">\n  965 | |                         7 specialized domains: Technology, Medical, Legal, Business, Academic, Creative\n  966 | |                       </p>\n  967 | |                     </div>\n  968 | |   \n  969 | |                     {/* Custom Glossaries */}\n  970 | |                     <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n  971 | |                       <div className=\"flex items-center mb-4\">\n  972 | |                         <div className=\"p-3 rounded-full bg-green-500\">\n  973 | |                           <BookOpen className=\"h-6 w-6 text-white\" />\n  974 | |                         </div>\n  975 | |                         <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Custom Glossaries</h3>\n  976 | |                       </div>\n  977 | |                       <p className=\"text-gray-600 text-sm leading-relaxed\">\n  978 | |                         Build personal terminology databases for consistent professional translations\n  979 | |                       </p>\n  980 | |                     </div>\n  981 | |   \n  982 | |                     {/* Translation History */}\n  983 | |                     <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n  984 | |                       <div className=\"flex items-center mb-4\">\n  985 | |                         <div className=\"p-3 rounded-full bg-blue-500\">\n  986 | |                           <History className=\"h-6 w-6 text-white\" />\n  987 | |                         </div>\n  988 | |                         <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Translation History</h3>\n  989 | |                       </div>\n  990 | |                       <p className=\"text-gray-600 text-sm leading-relaxed\">\n  991 | |                         Search and manage all your translations across devices with cloud sync\n  992 | |                       </p>\n  993 | |                     </div>\n  994 | |   \n  995 | |                     {/* Export & Share */}\n  996 | |                     <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n  997 | |                       <div className=\"flex items-center mb-4\">\n  998 | |                         <div className=\"p-3 rounded-full bg-orange-500\">\n  999 | |                           <Download className=\"h-6 w-6 text-white\" />\n 1000 | |                         </div>\n 1001 | |                         <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Export & Share</h3>\n 1002 | |                       </div>\n 1003 | |                       <p className=\"text-gray-600 text-sm leading-relaxed\">\n 1004 | |                         Download in multiple formats and create shareable translation links\n 1005 | |                       </p>\n 1006 | |                     </div>\n 1007 | |   \n 1008 | |                     {/* Usage Analytics */}\n 1009 | |                     <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n 1010 | |                       <div className=\"flex items-center mb-4\">\n 1011 | |                         <div className=\"p-3 rounded-full bg-indigo-500\">\n 1012 | |                           <TrendingUp className=\"h-6 w-6 text-white\" />\n 1013 | |                         </div>\n 1014 | |                         <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Usage Analytics</h3>\n 1015 | |                       </div>\n 1016 | |                       <p className=\"text-gray-600 text-sm leading-relaxed\">\n 1017 | |                         Track your translation patterns and improve your multilingual workflow\n 1018 | |                       </p>\n 1019 | |                     </div>\n 1020 | |   \n 1021 | |                     {/* European Focus */}\n 1022 | |                     <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n 1023 | |                       <div className=\"flex items-center mb-4\">\n 1024 | |                         <div className=\"p-3 rounded-full bg-red-500\">\n 1025 | |                           <Globe className=\"h-6 w-6 text-white\" />\n 1026 | |                         </div>\n 1027 | |                         <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">European Focus</h3>\n 1028 | |                       </div>\n 1029 | |                       <p className=\"text-gray-600 text-sm leading-relaxed\">\n 1030 | |                         Optimized for European languages, culture, and business contexts\n 1031 | |                       </p>\n 1032 | |                     </div>\n 1033 | |                   </div>\n 1034 | |                   \n 1035 | |                   <div className=\"text-center\">\n 1036 | |                     <Button \n 1037 | |                       onClick={() => window.location.href = '/auth/signin'}\n 1038 | |                       size=\"lg\"\n 1039 | |                       className=\"bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white px-8 py-4 text-lg font-semibold\"\n 1040 | |                     >\n 1041 | |                       Join Europe's Translation Platform - Free\n 1042 | |                     </Button>\n 1043 | |                     <p className=\"text-sm text-gray-500 mt-3\">\n 1044 | |                       Sign in to access European domain expertise, multilingual glossaries, and professional tools built for European languages.\n 1045 | |                     </p>\n 1046 | |                   </div>\n 1047 | |                 </CardContent>\n 1048 | |               </Card>\n 1049 | |             </div>\n 1050 | |           )}\n 1051 | |   \n 1052 | |           {/* Quick Actions - Only for authenticated users */}\n 1053 | |           {session?.user && (\n 1054 | |             <div className=\"flex justify-center space-x-4\">\n 1055 | |             <DropdownMenu>\n 1056 | |               <DropdownMenuTrigger asChild>\n 1057 | |                 <Button variant=\"outline\" className=\"shadow-lg\">\n 1058 | |                   <Download className=\"h-4 w-4 mr-2\" />\n 1059 | |                   Export\n 1060 | |                 </Button>\n 1061 | |               </DropdownMenuTrigger>\n 1062 | |               <DropdownMenuContent>\n 1063 | |                 <DropdownMenuItem onClick={() => {\n 1064 | |                   if (!translatedText) return toast.error(\"No translation to export\")\n 1065 | |                   const content = `${sourceText}\\n\\n→ ${translatedText}`\n 1066 | |                   const blob = new Blob([content], { type: 'text/plain' })\n 1067 | |                   const url = URL.createObjectURL(blob)\n 1068 | |                   const a = document.createElement('a')\n 1069 | |                   a.href = url\n 1070 | |                   a.download = 'linguala-translation.txt'\n 1071 | |                   a.click()\n 1072 | |                   URL.revokeObjectURL(url)\n 1073 | |                   toast.success(\"Translation exported!\")\n 1074 | |                 }}>\n 1075 | |                   Export as TXT\n 1076 | |                 </DropdownMenuItem>\n 1077 | |                 <DropdownMenuItem onClick={() => {\n 1078 | |                   if (!translatedText) return toast.error(\"No translation to export\")\n 1079 | |                   const data = {\n 1080 | |                     source: { text: sourceText, language: sourceLang },\n 1081 | |                     target: { text: translatedText, language: targetLang },\n 1082 | |                     domain: selectedDomain,\n 1083 | |                     timestamp: new Date().toISOString()\n 1084 | |                   }\n 1085 | |                   const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' })\n 1086 | |                   const url = URL.createObjectURL(blob)\n 1087 | |                   const a = document.createElement('a')\n 1088 | |                   a.href = url\n 1089 | |                   a.download = 'linguala-translation.json'\n 1090 | |                   a.click()\n 1091 | |                   URL.revokeObjectURL(url)\n 1092 | |                   toast.success(\"Translation exported!\")\n 1093 | |                 }}>\n 1094 | |                   Export as JSON\n 1095 | |                 </DropdownMenuItem>\n 1096 | |               </DropdownMenuContent>\n 1097 | |             </DropdownMenu>\n 1098 | |   \n 1099 | |             <DropdownMenu>\n 1100 | |               <DropdownMenuTrigger asChild>\n 1101 | |                 <Button variant=\"outline\" className=\"shadow-lg\">\n 1102 | |                   <Share2 className=\"h-4 w-4 mr-2\" />\n 1103 | |                   Share\n 1104 | |                 </Button>\n 1105 | |               </DropdownMenuTrigger>\n 1106 | |               <DropdownMenuContent>\n 1107 | |                 <DropdownMenuItem onClick={async () => {\n 1108 | |                   if (!translatedText) return toast.error(\"No translation to share\")\n 1109 | |                   const params = new URLSearchParams({\n 1110 | |                     text: sourceText,\n 1111 | |                     from: sourceLang,\n 1112 | |                     to: targetLang\n 1113 | |                   })\n 1114 | |                   const shareUrl = `https://linguala.eu?${params.toString()}`\n 1115 | |                   await copyToClipboard(shareUrl)\n 1116 | |                   toast.success(\"Share link copied!\")\n 1117 | |                 }}>\n 1118 | |                   Copy Share Link\n 1119 | |                 </DropdownMenuItem>\n 1120 | |                 <DropdownMenuItem onClick={async () => {\n 1121 | |                   if (!translatedText) return toast.error(\"No translation to share\")\n 1122 | |                   const shareText = `${sourceText} → ${translatedText}\\n\\nTranslated with Linguala.eu`\n 1123 | |                   if (navigator.share) {\n 1124 | |                     await navigator.share({ title: 'Linguala Translation', text: shareText })\n 1125 | |                   } else {\n 1126 | |                     await copyToClipboard(shareText)\n 1127 | |                   }\n 1128 | |                 }}>\n 1129 | |                   Share Translation\n 1130 | |                 </DropdownMenuItem>\n 1131 | |               </DropdownMenuContent>\n 1132 | |             </DropdownMenu>\n 1133 | |             </div>\n 1134 | |           )}\n 1135 | |         </main>\n 1136 | |       </div>\n 1137 | `->   )\n 1138 |     }\n      `----\n\n  x Expression expected\n      ,-[/home/user/project/components/linguala-translator.tsx:1135:1]\n 1135 |       </main>\n 1136 |     </div>\n 1137 |   )\n 1138 | }\n      : ^\n      `----\n\nCaused by:\n    Syntax Error\nThis error occurred during the build process and can only be dismissed by fixing the error.",
  "messageID": "msg_9a4e36338001ynGltQXPhp4EzH",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm"
}
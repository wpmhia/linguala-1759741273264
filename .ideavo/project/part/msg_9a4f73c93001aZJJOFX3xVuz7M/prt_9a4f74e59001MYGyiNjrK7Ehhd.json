{
  "id": "prt_9a4f74e59001MYGyiNjrK7Ehhd",
  "messageID": "msg_9a4f73c93001aZJJOFX3xVuz7M",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01WsxesKTr2BjaYu4LG3Q895",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/api/translate/route.ts"
    },
    "output": "<file>\n00001| import { NextRequest, NextResponse } from 'next/server'\n00002| \n00003| // Language mapping for Qwen API\n00004| const LANGUAGE_MAP: Record<string, string> = {\n00005|   auto: 'auto',\n00006|   en: 'English',\n00007|   zh: 'Chinese',\n00008|   ja: 'Japanese',\n00009|   ko: 'Korean',\n00010|   es: 'Spanish',\n00011|   fr: 'French',\n00012|   de: 'German',\n00013|   it: 'Italian',\n00014|   pt: 'Portuguese',\n00015|   ru: 'Russian',\n00016|   ar: 'Arabic',\n00017|   da: 'Danish',\n00018|   nl: 'Dutch',\n00019|   sv: 'Swedish',\n00020|   no: 'Norwegian',\n00021|   fi: 'Finnish',\n00022|   pl: 'Polish',\n00023|   cs: 'Czech',\n00024|   hu: 'Hungarian',\n00025|   ro: 'Romanian',\n00026|   bg: 'Bulgarian',\n00027|   hr: 'Croatian',\n00028|   sk: 'Slovak',\n00029|   sl: 'Slovenian',\n00030|   et: 'Estonian',\n00031|   lv: 'Latvian',\n00032|   lt: 'Lithuanian',\n00033|   el: 'Greek',\n00034|   tr: 'Turkish',\n00035|   he: 'Hebrew',\n00036|   hi: 'Hindi',\n00037|   th: 'Thai',\n00038|   vi: 'Vietnamese',\n00039|   ms: 'Malay',\n00040|   id: 'Indonesian',\n00041|   tl: 'Filipino',\n00042|   uk: 'Ukrainian',\n00043| }\n00044| \n00045| export async function POST(request: NextRequest) {\n00046|   try {\n00047|     const { text, sourceLang, targetLang, domain, glossary } = await request.json()\n00048| \n00049|     if (!text || !targetLang) {\n00050|       return NextResponse.json(\n00051|         { error: 'Text and target language are required' },\n00052|         { status: 400 }\n00053|       )\n00054|     }\n00055| \n00056|     const apiKey = process.env.DASHSCOPE_API_KEY\n00057|     if (!apiKey) {\n00058|       return NextResponse.json(\n00059|         { error: 'API key not configured. Please set DASHSCOPE_API_KEY environment variable.' },\n00060|         { status: 500 }\n00061|       )\n00062|     }\n00063| \n00064|     // Prepare the translation options\n00065|     const sourceLanguage = LANGUAGE_MAP[sourceLang] || (sourceLang === 'auto' ? 'auto' : sourceLang)\n00066|     const targetLanguage = LANGUAGE_MAP[targetLang] || targetLang\n00067| \n00068|     // Apply glossary preprocessing if provided\n00069|     let processedText = text\n00070|     if (glossary && Array.isArray(glossary)) {\n00071|       glossary.forEach((entry: any) => {\n00072|         if (entry.source && entry.target) {\n00073|           // Simple case-insensitive replacement\n00074|           const regex = new RegExp(`\\\\b${entry.source.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\b`, 'gi')\n00075|           processedText = processedText.replace(regex, `[GLOSSARY:${entry.target}]`)\n00076|         }\n00077|       })\n00078|     }\n00079| \n00080|     // Add domain context to improve translation quality\n00081|     const domainContexts: Record<string, string> = {\n00082|       technical: \"This is a technical/IT translation. Focus on accurate technical terminology.\",\n00083|       medical: \"This is a medical translation. Use precise medical terminology.\",\n00084|       legal: \"This is a legal translation. Maintain formal legal language and terminology.\",\n00085|       business: \"This is a business translation. Use professional business terminology.\",\n00086|       academic: \"This is an academic translation. Use scholarly and precise language.\",\n00087|       creative: \"This is a creative translation. Maintain the tone and style of the original.\"\n00088|     }\n00089| \n00090|     // Call Qwen MT API using the correct format for qwen-mt-turbo\n00091|     const response = await fetch('https://dashscope-intl.aliyuncs.com/compatible-mode/v1/chat/completions', {\n00092|       method: 'POST',\n00093|       headers: {\n00094|         'Authorization': `Bearer ${apiKey}`,\n00095|         'Content-Type': 'application/json',\n00096|       },\n00097|       body: JSON.stringify({\n00098|         model: 'qwen-mt-turbo',\n00099|         messages: [{\n00100|           role: 'user',\n00101|           content: text\n00102|         }],\n00103|         translation_options: {\n00104|           source_lang: sourceLanguage,\n00105|           target_lang: targetLanguage\n00106|         }\n00107|       }),\n00108|     })\n00109| \n00110|     if (!response.ok) {\n00111|       const errorData = await response.text()\n00112|       console.error('Qwen API error:', errorData)\n00113|       return NextResponse.json(\n00114|         { error: 'Translation service unavailable' },\n00115|         { status: 500 }\n00116|       )\n00117|     }\n00118| \n00119|     const data = await response.json()\n00120|     const translatedText = data.choices?.[0]?.message?.content?.trim()\n00121| \n00122|     if (!translatedText) {\n00123|       return NextResponse.json(\n00124|         { error: 'No translation received' },\n00125|         { status: 500 }\n00126|       )\n00127|     }\n00128| \n00129|     return NextResponse.json({\n00130|       translatedText,\n00131|       sourceLang,\n00132|       targetLang,\n00133|     })\n00134| \n00135|   } catch (error) {\n00136|     console.error('Translation error:', error)\n00137|     return NextResponse.json(\n00138|       { error: 'Internal server error' },\n00139|       { status: 500 }\n00140|     )\n00141|   }\n00142| }\n</file>",
    "metadata": {
      "preview": "import { NextRequest, NextResponse } from 'next/server'\n\n// Language mapping for Qwen API\nconst LANGUAGE_MAP: Record<string, string> = {\n  auto: 'auto',\n  en: 'English',\n  zh: 'Chinese',\n  ja: 'Japanese',\n  ko: 'Korean',\n  es: 'Spanish',\n  fr: 'French',\n  de: 'German',\n  it: 'Italian',\n  pt: 'Portuguese',\n  ru: 'Russian',\n  ar: 'Arabic',\n  da: 'Danish',\n  nl: 'Dutch',\n  sv: 'Swedish',\n  no: 'Norwegian',"
    },
    "title": "app/api/translate/route.ts",
    "time": {
      "start": 1759409295349,
      "end": 1759409295356
    }
  }
}
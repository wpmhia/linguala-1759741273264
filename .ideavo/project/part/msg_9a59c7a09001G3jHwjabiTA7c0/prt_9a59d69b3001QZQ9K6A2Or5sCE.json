{
  "id": "prt_9a59d69b3001QZQ9K6A2Or5sCE",
  "messageID": "msg_9a59c7a09001G3jHwjabiTA7c0",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "write",
  "callID": "toolu_01K8fpjNfcobkD9KkkuQPFKx",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/auth/signout/page.tsx",
      "content": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { signOut, useSession } from \"next-auth/react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { CheckCircle, Home, LogOut } from \"lucide-react\"\nimport { LingualaLogo } from \"@/components/ui/linguala-logo\"\n\nexport default function SignOutPage() {\n  const { data: session } = useSession()\n  const [isSigningOut, setIsSigningOut] = useState(false)\n  const [isSignedOut, setIsSignedOut] = useState(false)\n\n  const handleSignOut = async () => {\n    setIsSigningOut(true)\n    try {\n      await signOut({ \n        callbackUrl: '/',\n        redirect: false \n      })\n      setIsSignedOut(true)\n      // Redirect after a brief delay to show success message\n      setTimeout(() => {\n        window.location.href = '/'\n      }, 2000)\n    } catch (error) {\n      console.error('Sign out error:', error)\n      setIsSigningOut(false)\n    }\n  }\n\n  // Auto sign out if user is still signed in and visits this page\n  useEffect(() => {\n    if (session?.user && !isSigningOut && !isSignedOut) {\n      handleSignOut()\n    }\n  }, [session])\n\n  if (isSignedOut) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <div className=\"flex justify-center mb-4\">\n              <LingualaLogo size=\"lg\" />\n            </div>\n            <div className=\"flex items-center justify-center mb-4\">\n              <div className=\"p-3 rounded-full bg-green-100\">\n                <CheckCircle className=\"h-8 w-8 text-green-600\" />\n              </div>\n            </div>\n            <CardTitle className=\"text-xl font-semibold text-green-900\">\n              Successfully Signed Out\n            </CardTitle>\n            <CardDescription className=\"text-green-700\">\n              You have been securely signed out of your account.\n            </CardDescription>\n          </CardHeader>\n          \n          <CardContent>\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\">\n              <p className=\"text-sm text-green-800\">\n                Your session has been ended and you're being redirected to the home page.\n              </p>\n            </div>\n            \n            <Button\n              onClick={() => window.location.href = '/'}\n              className=\"w-full bg-blue-600 hover:bg-blue-700\"\n            >\n              <Home className=\"h-4 w-4 mr-2\" />\n              Return to Translation Platform\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <div className=\"flex justify-center mb-4\">\n            <LingualaLogo size=\"lg\" />\n          </div>\n          <CardTitle className=\"text-xl font-semibold\">\n            Sign Out\n          </CardTitle>\n          <CardDescription>\n            {session?.user ? \n              `Are you sure you want to sign out, ${session.user.name || session.user.email}?` :\n              \"Signing you out...\"\n            }\n          </CardDescription>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-4\">\n          {session?.user && !isSigningOut ? (\n            <>\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <p className=\"text-sm text-yellow-800\">\n                  You will lose access to your translation history, custom glossaries, and other premium features until you sign in again.\n                </p>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Button\n                  onClick={handleSignOut}\n                  variant=\"destructive\"\n                  className=\"w-full\"\n                >\n                  <LogOut className=\"h-4 w-4 mr-2\" />\n                  Sign Out\n                </Button>\n                \n                <Button\n                  variant=\"outline\"\n                  onClick={() => window.location.href = '/'}\n                  className=\"w-full\"\n                >\n                  Cancel\n                </Button>\n              </div>\n            </>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <p className=\"text-gray-600\">\n                {isSigningOut ? \"Signing you out...\" : \"Loading...\"}\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "filepath": "/home/user/project/app/auth/signout/page.tsx",
      "exists": false
    },
    "title": "app/auth/signout/page.tsx",
    "time": {
      "start": 1759420195703,
      "end": 1759420195705
    }
  }
}
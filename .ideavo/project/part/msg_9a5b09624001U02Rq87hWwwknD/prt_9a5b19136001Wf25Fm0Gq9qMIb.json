{
  "id": "prt_9a5b19136001Wf25Fm0Gq9qMIb",
  "messageID": "msg_9a5b09624001U02Rq87hWwwknD",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01785fBsWXMuiX1EW5M3HwKp",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/components/linguala-translator.tsx",
      "offset": 100
    },
    "output": "<file>\n00101|       } else {\n00102|         const errorData = await response.json().catch(() => ({ error: 'Unknown error' }))\n00103|         console.error('Translation API error:', errorData)\n00104|         throw new Error(errorData.error || 'Translation failed')\n00105|       }\n00106|     } catch (error) {\n00107|       console.error('Translation error:', error)\n00108|       toast.error(\"Translation temporarily unavailable. Please try again later.\")\n00109|       // Set a helpful fallback message\n00110|       setTranslatedText(\"Translation service is initializing. Please try again in a moment.\")\n00111|     } finally {\n00112|       setIsTranslating(false)\n00113|     }\n00114|   }\n00115| \n00116|   const swapLanguages = () => {\n00117|     if (sourceLang === \"auto\") return\n00118|     \n00119|     setSourceLang(targetLang)\n00120|     setTargetLang(sourceLang)\n00121|     setSourceText(translatedText)\n00122|     setTranslatedText(sourceText)\n00123|   }\n00124| \n00125|   const copyToClipboard = async (text: string) => {\n00126|     try {\n00127|       await navigator.clipboard.writeText(text)\n00128|       setCopySuccess(true)\n00129|       toast.success(\"Copied to clipboard!\")\n00130|       setTimeout(() => setCopySuccess(false), 2000)\n00131|     } catch (error) {\n00132|       toast.error(\"Failed to copy to clipboard\")\n00133|     }\n00134|   }\n00135| \n00136|   return (\n00137|     <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/50\">\n00138|       {/* Premium Header */}\n00139|       <header className=\"bg-white/80 backdrop-blur-lg border-b border-gray-200/50 sticky top-0 z-50\">\n00140|         <div className=\"max-w-7xl mx-auto px-4 py-4\">\n00141|           <div className=\"flex items-center justify-between\">\n00142|             <LingualaLogo size=\"lg\" />\n00143|             <UserProfile />\n00144|           </div>\n00145|         </div>\n00146|       </header>\n00147| \n00148|       <main className=\"max-w-7xl mx-auto px-4 py-8\">\n00149|         {/* Main Translation Interface */}\n00150|         <Card className=\"shadow-2xl border-0 bg-white/95 backdrop-blur-sm mb-8\">\n00151|           <CardHeader className=\"pb-4\">\n00152|           </CardHeader>\n00153| \n00154|           <CardContent className=\"space-y-6\">\n00155|             {/* Language Selection */}\n00156|             <div className=\"flex items-center justify-center space-x-4\">\n00157|               <Select value={sourceLang} onValueChange={(value) => {\n00158|                 setSourceLang(value)\n00159|                 if (sourceText.trim()) translateText(sourceText, value, targetLang)\n00160|               }}>\n00161|                 <SelectTrigger className=\"w-48 h-12 border-2 border-gray-200 hover:border-blue-400 focus:border-blue-500 transition-colors\">\n00162|                   <SelectValue />\n00163|                 </SelectTrigger>\n00164|                 <SelectContent>\n00165|                   {LANGUAGES.map(lang => (\n00166|                     <SelectItem key={lang.code} value={lang.code}>\n00167|                       {lang.name}\n00168|                     </SelectItem>\n00169|                   ))}\n00170|                 </SelectContent>\n00171|               </Select>\n00172| \n00173|               <Button\n00174|                 variant=\"ghost\"\n00175|                 size=\"lg\"\n00176|                 onClick={swapLanguages}\n00177|                 disabled={sourceLang === \"auto\"}\n00178|                 className=\"p-3 rounded-full hover:bg-blue-50 hover:text-blue-600 transition-all duration-200 hover:scale-110 disabled:opacity-50\"\n00179|               >\n00180|                 <ArrowUpDown className=\"h-5 w-5\" />\n00181|               </Button>\n00182| \n00183|               <Select value={targetLang} onValueChange={(value) => {\n00184|                 setTargetLang(value)\n00185|                 if (sourceText.trim()) translateText(sourceText, sourceLang, value)\n00186|               }}>\n00187|                 <SelectTrigger className=\"w-48 h-12 border-2 border-gray-200 hover:border-blue-400 focus:border-blue-500 transition-colors\">\n00188|                   <SelectValue />\n00189|                 </SelectTrigger>\n00190|                 <SelectContent>\n00191|                   {LANGUAGES.filter(lang => lang.code !== \"auto\").map(lang => (\n00192|                     <SelectItem key={lang.code} value={lang.code}>\n00193|                       {lang.name}\n00194|                     </SelectItem>\n00195|                   ))}\n00196|                 </SelectContent>\n00197|               </Select>\n00198|             </div>\n00199| \n00200|             {/* Translation Areas */}\n00201|             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n00202|               {/* Source Text */}\n00203|               <div className=\"space-y-3\">\n00204|                 <Label className=\"text-base font-semibold text-gray-700 flex items-center space-x-2\">\n00205|                   <Globe className=\"h-4 w-4\" />\n00206|                   <span>{getLanguageName(sourceLang)}</span>\n00207|                 </Label>\n00208|                 <div className=\"relative\">\n00209|                   <Textarea\n00210|                     value={sourceText}\n00211|                     onChange={(e) => handleSourceTextChange(e.target.value)}\n00212|                     placeholder=\"Enter text to translate...\"\n00213|                     className=\"min-h-[200px] text-base border-2 border-gray-200 focus:border-blue-500 transition-colors resize-none\"\n00214|                   />\n00215|                   <div className=\"absolute bottom-2 right-2 flex items-center space-x-2\">\n00216|                     <div className={`text-xs ${\n00217|                       sourceText.length > 4500 ? 'text-red-500 font-semibold' : \n00218|                       sourceText.length > 4000 ? 'text-orange-500' :\n00219|                       'text-gray-400'\n00220|                     }`}>\n00221|                       {sourceText.length} / 5000\n00222|                     </div>\n00223|                     {sourceText.length > 4500 && (\n00224|                       <AlertCircle className=\"h-4 w-4 text-red-500\" />\n00225|                     )}\n00226|                   </div>\n00227|                 </div>\n00228|               </div>\n00229| \n00230|               {/* Translated Text */}\n00231|               <div className=\"space-y-3\">\n00232|                 <div className=\"flex items-center justify-between\">\n00233|                   <Label className=\"text-base font-semibold text-gray-700 flex items-center space-x-2\">\n00234|                     <Sparkles className=\"h-4 w-4\" />\n00235|                     <span>{getLanguageName(targetLang)}</span>\n00236|                   </Label>\n00237|                   <div className=\"flex items-center space-x-2\">\n00238|                     {translatedText && (\n00239|                       <Button\n00240|                         variant=\"ghost\"\n00241|                         size=\"sm\"\n00242|                         onClick={() => copyToClipboard(translatedText)}\n00243|                         className=\"text-gray-500 hover:text-blue-600\"\n00244|                       >\n00245|                         {copySuccess ? <Check className=\"h-4 w-4 text-green-600\" /> : <Copy className=\"h-4 w-4\" />}\n00246|                       </Button>\n00247|                     )}\n00248|                   </div>\n00249|                 </div>\n00250|                 <Textarea\n00251|                   value={translatedText}\n00252|                   readOnly\n00253|                   placeholder={isTranslating ? \"Translating...\" : \"Translation will appear here\"}\n00254|                   className=\"min-h-[200px] text-base bg-gradient-to-br from-blue-50/50 to-indigo-50/50 border-2 border-gray-200 focus:border-blue-500 transition-colors resize-none\"\n00255|                 />\n00256|               </div>\n00257|             </div>\n00258|           </CardContent>\n00259|         </Card>\n00260| \n00261|         {/* Features showcase for anonymous users */}\n00262|         {!session?.user && (\n00263|           <div className=\"max-w-4xl mx-auto mb-8\">\n00264|             <Card className=\"bg-gradient-to-br from-blue-50 to-indigo-50 border-blue-200\">\n00265|               <CardContent className=\"p-8\">\n00266|                 <div className=\"text-center mb-8\">\n00267|                   <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n00268|                     Unlock Professional EU Translation\n00269|                   </h2>\n00270|                   <p className=\"text-lg text-gray-600\">\n00271|                     Join thousands of EU professionals translating across all 24 official languages\n00272|                   </p>\n00273|                 </div>\n00274|                 \n00275|                 <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n00276|                   {/* Domain Expertise */}\n00277|                   <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n00278|                     <div className=\"flex items-center mb-4\">\n00279|                       <div className=\"p-3 rounded-full bg-purple-500\">\n00280|                         <Brain className=\"h-6 w-6 text-white\" />\n00281|                       </div>\n00282|                       <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Domain Expertise</h3>\n00283|                     </div>\n00284|                     <p className=\"text-gray-600 text-sm leading-relaxed\">\n00285|                       7 specialized domains: Technology, Medical, Legal, Business, Academic, Creative\n00286|                     </p>\n00287|                   </div>\n00288| \n00289|                   {/* Custom Glossaries */}\n00290|                   <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n00291|                     <div className=\"flex items-center mb-4\">\n00292|                       <div className=\"p-3 rounded-full bg-green-500\">\n00293|                         <BookOpen className=\"h-6 w-6 text-white\" />\n00294|                       </div>\n00295|                       <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Custom Glossaries</h3>\n00296|                     </div>\n00297|                     <p className=\"text-gray-600 text-sm leading-relaxed\">\n00298|                       Build personal terminology databases for consistent professional translations\n00299|                     </p>\n00300|                   </div>\n00301| \n00302|                   {/* Translation History */}\n00303|                   <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n00304|                     <div className=\"flex items-center mb-4\">\n00305|                       <div className=\"p-3 rounded-full bg-blue-500\">\n00306|                         <History className=\"h-6 w-6 text-white\" />\n00307|                       </div>\n00308|                       <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Translation History</h3>\n00309|                     </div>\n00310|                     <p className=\"text-gray-600 text-sm leading-relaxed\">\n00311|                       Search and manage all your translations across devices with cloud sync\n00312|                     </p>\n00313|                   </div>\n00314| \n00315|                   {/* Export & Share */}\n00316|                   <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n00317|                     <div className=\"flex items-center mb-4\">\n00318|                       <div className=\"p-3 rounded-full bg-orange-500\">\n00319|                         <Download className=\"h-6 w-6 text-white\" />\n00320|                       </div>\n00321|                       <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Export & Share</h3>\n00322|                     </div>\n00323|                     <p className=\"text-gray-600 text-sm leading-relaxed\">\n00324|                       Download in multiple formats and create shareable translation links\n00325|                     </p>\n00326|                   </div>\n00327| \n00328|                   {/* Usage Analytics */}\n00329|                   <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n00330|                     <div className=\"flex items-center mb-4\">\n00331|                       <div className=\"p-3 rounded-full bg-indigo-500\">\n00332|                         <TrendingUp className=\"h-6 w-6 text-white\" />\n00333|                       </div>\n00334|                       <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">Usage Analytics</h3>\n00335|                     </div>\n00336|                     <p className=\"text-gray-600 text-sm leading-relaxed\">\n00337|                       Track your translation patterns and improve your multilingual workflow\n00338|                     </p>\n00339|                   </div>\n00340| \n00341|                   {/* EU Official */}\n00342|                   <div className=\"bg-white rounded-lg p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow\">\n00343|                     <div className=\"flex items-center mb-4\">\n00344|                       <div className=\"p-3 rounded-full bg-blue-600\">\n00345|                         <Globe className=\"h-6 w-6 text-white\" />\n00346|                       </div>\n00347|                       <h3 className=\"text-lg font-semibold text-gray-900 ml-4\">EU Official Languages</h3>\n00348|                     </div>\n00349|                     <p className=\"text-gray-600 text-sm leading-relaxed\">\n00350|                       All 24 official EU languages with optimized cultural and business contexts\n00351|                     </p>\n00352|                   </div>\n00353|                 </div>\n00354|                 \n00355|                 <div className=\"text-center\">\n00356|                   <Button \n00357|                     onClick={() => window.location.href = '/auth/signin'}\n00358|                     size=\"lg\"\n00359|                     className=\"bg-gradient-to-r from-blue-600 to-indigo-700 hover:from-blue-700 hover:to-indigo-800 text-white px-8 py-4 text-lg font-semibold\"\n00360|                   >\n00361|                     Join the Official EU Translation Platform - Free\n00362|                   </Button>\n00363|                   <p className=\"text-sm text-gray-500 mt-3\">\n00364|                     Sign in to access all 24 EU languages, domain expertise, multilingual glossaries, and professional tools built for EU contexts.\n00365|                   </p>\n00366|                 </div>\n00367|               </CardContent>\n00368|             </Card>\n00369|           </div>\n00370|         )}\n00371|       </main>\n00372|     </div>\n00373|   )\n00374| }\n</file>",
    "metadata": {
      "preview": "      } else {\n        const errorData = await response.json().catch(() => ({ error: 'Unknown error' }))\n        console.error('Translation API error:', errorData)\n        throw new Error(errorData.error || 'Translation failed')\n      }\n    } catch (error) {\n      console.error('Translation error:', error)\n      toast.error(\"Translation temporarily unavailable. Please try again later.\")\n      // Set a helpful fallback message\n      setTranslatedText(\"Translation service is initializing. Please try again in a moment.\")\n    } finally {\n      setIsTranslating(false)\n    }\n  }\n\n  const swapLanguages = () => {\n    if (sourceLang === \"auto\") return\n    \n    setSourceLang(targetLang)\n    setTargetLang(sourceLang)"
    },
    "title": "components/linguala-translator.tsx",
    "time": {
      "start": 1759421502515,
      "end": 1759421502517
    }
  }
}
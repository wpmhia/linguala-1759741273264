{
  "id": "prt_9a65afc2f001KlhIqvhKunHUEd",
  "messageID": "msg_9a658f325001nRPtF1CaNSll60",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "write",
  "callID": "toolu_01XuMDxBgxrQeJ25hYSzJ3ao",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/auth/signup/page.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { signIn } from \"next-auth/react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Mail, Chrome, AlertTriangle, CheckCircle, Eye, EyeOff } from \"lucide-react\"\nimport { LingualaLogo } from \"@/components/ui/linguala-logo\"\nimport Link from \"next/link\"\n\nexport default function SignUpPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [success, setSuccess] = useState(false)\n  const router = useRouter()\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }))\n    setError(\"\") // Clear errors when user types\n  }\n\n  const handleSignUp = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.email || !formData.password) return\n\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match\")\n      return\n    }\n\n    if (formData.password.length < 6) {\n      setError(\"Password must be at least 6 characters long\")\n      return\n    }\n\n    setIsLoading(true)\n    setError(\"\")\n\n    try {\n      // Register user\n      const response = await fetch(\"/api/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: formData.name || formData.email.split('@')[0],\n          email: formData.email,\n          password: formData.password,\n        }),\n      })\n\n      const data = await response.json()\n\n      if (response.ok) {\n        setSuccess(true)\n        \n        // Auto-sign in after successful registration\n        const result = await signIn(\"credentials\", {\n          email: formData.email,\n          password: formData.password,\n          redirect: false,\n        })\n\n        if (result?.ok) {\n          setTimeout(() => {\n            router.push(\"/\")\n          }, 1500)\n        } else {\n          // Registration successful but auto-signin failed, redirect to signin\n          setTimeout(() => {\n            router.push(\"/auth/signin?message=Registration successful, please sign in\")\n          }, 1500)\n        }\n      } else {\n        setError(data.error || \"Registration failed\")\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      setError(\"Something went wrong. Please try again.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleGoogleSignUp = async () => {\n    setIsLoading(true)\n    try {\n      await signIn(\"google\", { callbackUrl: \"/\" })\n    } catch (error) {\n      console.error(\"Google sign up error:\", error)\n      setError(\"Google sign up failed. Please try again.\")\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center px-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <div className=\"flex justify-center mb-4\">\n            <LingualaLogo size=\"lg\" />\n          </div>\n          <CardTitle className=\"text-2xl font-semibold\">Create Your Account</CardTitle>\n          <CardDescription>\n            Join Linguala to access premium translation features, custom glossaries, and more\n          </CardDescription>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-4\">\n          {success && (\n            <Alert className=\"border-green-200 bg-green-50\">\n              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n              <AlertDescription className=\"text-green-700\">\n                Account created successfully! Signing you in...\n              </AlertDescription>\n            </Alert>\n          )}\n          \n          {error && !success && (\n            <Alert className=\"border-red-200 bg-red-50\">\n              <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n              <AlertDescription className=\"text-red-700\">\n                {error}\n              </AlertDescription>\n            </Alert>\n          )}\n\n          {/* Google Sign Up */}\n          {process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID && (\n            <>\n              <Button\n                variant=\"outline\"\n                onClick={handleGoogleSignUp}\n                disabled={isLoading || success}\n                className=\"w-full\"\n              >\n                <Chrome className=\"h-4 w-4 mr-2\" />\n                Continue with Google\n              </Button>\n\n              <div className=\"relative\">\n                <Separator />\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <span className=\"bg-white px-2 text-xs text-gray-500\">or sign up with email</span>\n                </div>\n              </div>\n            </>\n          )}\n\n          {/* Email Sign Up Form */}\n          <form onSubmit={handleSignUp} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Full Name (optional)\n              </label>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                value={formData.name}\n                onChange={handleInputChange}\n                placeholder=\"Enter your full name\"\n                disabled={isLoading || success}\n                className=\"w-full\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Email address\n              </label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                placeholder=\"Enter your email\"\n                required\n                disabled={isLoading || success}\n                className=\"w-full\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <Input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter your password\"\n                  required\n                  disabled={isLoading || success}\n                  className=\"w-full pr-10\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Must be at least 6 characters long\n              </p>\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Confirm Password\n              </label>\n              <div className=\"relative\">\n                <Input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  placeholder=\"Confirm your password\"\n                  required\n                  disabled={isLoading || success}\n                  className=\"w-full pr-10\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n            \n            <Button\n              type=\"submit\"\n              disabled={!formData.email || !formData.password || !formData.confirmPassword || isLoading || success}\n              className=\"w-full bg-blue-600 hover:bg-blue-700\"\n            >\n              <Mail className=\"h-4 w-4 mr-2\" />\n              {success ? \"Success!\" : isLoading ? \"Creating Account...\" : \"Create Account\"}\n            </Button>\n          </form>\n\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mt-4\">\n            <p className=\"text-xs text-blue-800 text-center\">\n              <strong>Free to start!</strong> Create your account and explore premium features. Upgrade anytime to unlock unlimited translations and advanced tools.\n            </p>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Already have an account?{\" \"}\n              <Link href=\"/auth/signin\" className=\"text-blue-600 hover:text-blue-500 font-medium\">\n                Sign in\n              </Link>\n            </p>\n          </div>\n          \n          <div className=\"text-center text-xs text-gray-500 mt-2\">\n            By creating an account, you agree to our terms of service and privacy policy.\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "filepath": "/home/user/project/app/auth/signup/page.tsx",
      "exists": false
    },
    "title": "app/auth/signup/page.tsx",
    "time": {
      "start": 1759432633433,
      "end": 1759432633434
    }
  }
}
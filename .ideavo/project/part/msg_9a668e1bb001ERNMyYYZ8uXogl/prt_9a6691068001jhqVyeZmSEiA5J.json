{
  "id": "prt_9a6691068001jhqVyeZmSEiA5J",
  "messageID": "msg_9a668e1bb001ERNMyYYZ8uXogl",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01Lx2tqo7FQs9u5i6GPRGr2Q",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/components/linguala-translator.tsx"
    },
    "output": "<file>\n00001| \"use client\"\n00002| \n00003| import { useState, useRef, useEffect } from \"react\"\n00004| import { useSession } from \"next-auth/react\"\n00005| import { Button } from \"@/components/ui/button\"\n00006| import { Textarea } from \"@/components/ui/textarea\"\n00007| import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n00008| import { \n00009|   ArrowUpDown, Copy, Volume2, Star, MoreHorizontal,\n00010|   Check, X, Mic, Settings, History, FileText\n00011| } from \"lucide-react\"\n00012| import { toast } from \"sonner\"\n00013| import { LingualaLogo } from \"@/components/ui/linguala-logo\"\n00014| import { UserProfile } from \"@/components/user-profile\"\n00015| import { PremiumFeatures } from \"@/components/premium-features\"\n00016| \n00017| // Common languages like Google Translate\n00018| const LANGUAGES = [\n00019|   { code: \"auto\", name: \"Detect language\", flag: \"🌐\" },\n00020|   { code: \"en\", name: \"English\", flag: \"🇬🇧\" },\n00021|   { code: \"es\", name: \"Spanish\", flag: \"🇪🇸\" },\n00022|   { code: \"fr\", name: \"French\", flag: \"🇫🇷\" },\n00023|   { code: \"de\", name: \"German\", flag: \"🇩🇪\" },\n00024|   { code: \"it\", name: \"Italian\", flag: \"🇮🇹\" },\n00025|   { code: \"pt\", name: \"Portuguese\", flag: \"🇵🇹\" },\n00026|   { code: \"ru\", name: \"Russian\", flag: \"🇷🇺\" },\n00027|   { code: \"ja\", name: \"Japanese\", flag: \"🇯🇵\" },\n00028|   { code: \"ko\", name: \"Korean\", flag: \"🇰🇷\" },\n00029|   { code: \"zh\", name: \"Chinese\", flag: \"🇨🇳\" },\n00030|   { code: \"ar\", name: \"Arabic\", flag: \"🇸🇦\" },\n00031|   { code: \"hi\", name: \"Hindi\", flag: \"🇮🇳\" },\n00032|   { code: \"nl\", name: \"Dutch\", flag: \"🇳🇱\" },\n00033|   { code: \"sv\", name: \"Swedish\", flag: \"🇸🇪\" },\n00034|   { code: \"da\", name: \"Danish\", flag: \"🇩🇰\" },\n00035|   { code: \"no\", name: \"Norwegian\", flag: \"🇳🇴\" },\n00036|   { code: \"fi\", name: \"Finnish\", flag: \"🇫🇮\" },\n00037|   { code: \"pl\", name: \"Polish\", flag: \"🇵🇱\" },\n00038|   { code: \"cs\", name: \"Czech\", flag: \"🇨🇿\" },\n00039|   { code: \"hu\", name: \"Hungarian\", flag: \"🇭🇺\" },\n00040|   { code: \"tr\", name: \"Turkish\", flag: \"🇹🇷\" },\n00041|   { code: \"th\", name: \"Thai\", flag: \"🇹🇭\" },\n00042|   { code: \"vi\", name: \"Vietnamese\", flag: \"🇻🇳\" }\n00043| ]\n00044| \n00045| export default function LingualaTranslator() {\n00046|   const { data: session, status } = useSession()\n00047|   \n00048|   // Core translation state\n00049|   const [sourceText, setSourceText] = useState(\"\")\n00050|   const [translatedText, setTranslatedText] = useState(\"\")\n00051|   const [sourceLang, setSourceLang] = useState(\"auto\")\n00052|   const [targetLang, setTargetLang] = useState(\"en\")\n00053|   const [isTranslating, setIsTranslating] = useState(false)\n00054|   \n00055|   // UI state\n00056|   const [copySuccess, setCopySuccess] = useState(false)\n00057|   const [focusedArea, setFocusedArea] = useState<'source' | 'target' | null>(null)\n00058| \n00059|   // Helper functions\n00060|   const getLanguage = (code: string) => {\n00061|     return LANGUAGES.find(lang => lang.code === code) || LANGUAGES[1]\n00062|   }\n00063| \n00064|   const handleSourceTextChange = (text: string) => {\n00065|     setSourceText(text)\n00066|     if (text.trim()) {\n00067|       translateText(text, sourceLang, targetLang)\n00068|     } else {\n00069|       setTranslatedText(\"\")\n00070|     }\n00071|   }\n00072| \n00073|   const translateText = async (text: string, from: string, to: string) => {\n00074|     if (!text.trim()) return\n00075|     \n00076|     setIsTranslating(true)\n00077|     try {\n00078|       const response = await fetch('/api/translate', {\n00079|         method: 'POST',\n00080|         headers: { 'Content-Type': 'application/json' },\n00081|         body: JSON.stringify({ text, sourceLang: from, targetLang: to })\n00082|       })\n00083|       \n00084|       if (response.ok) {\n00085|         const data = await response.json()\n00086|         setTranslatedText(data.translatedText)\n00087|       } else {\n00088|         const errorData = await response.json().catch(() => ({ error: 'Unknown error' }))\n00089|         console.error('Translation API error:', errorData)\n00090|         throw new Error(errorData.error || 'Translation failed')\n00091|       }\n00092|     } catch (error) {\n00093|       console.error('Translation error:', error)\n00094|       setTranslatedText(\"Translation service temporarily unavailable. Please try again later.\")\n00095|     } finally {\n00096|       setIsTranslating(false)\n00097|     }\n00098|   }\n00099| \n00100|   const swapLanguages = () => {\n00101|     if (sourceLang === \"auto\") return\n00102|     \n00103|     setSourceLang(targetLang)\n00104|     setTargetLang(sourceLang)\n00105|     setSourceText(translatedText)\n00106|     setTranslatedText(sourceText)\n00107|   }\n00108| \n00109|   const copyToClipboard = async (text: string) => {\n00110|     try {\n00111|       await navigator.clipboard.writeText(text)\n00112|       setCopySuccess(true)\n00113|       toast.success(\"Copied to clipboard!\")\n00114|       setTimeout(() => setCopySuccess(false), 2000)\n00115|     } catch (error) {\n00116|       toast.error(\"Failed to copy to clipboard\")\n00117|     }\n00118|   }\n00119| \n00120|   const clearText = () => {\n00121|     setSourceText(\"\")\n00122|     setTranslatedText(\"\")\n00123|   }\n00124| \n00125|   return (\n00126|     <div className=\"min-h-screen bg-white\">\n00127|       {/* Google-style Header */}\n00128|       <header className=\"border-b border-gray-200\">\n00129|         <div className=\"max-w-screen-xl mx-auto px-6 py-4\">\n00130|           <div className=\"flex items-center justify-between\">\n00131|             <div className=\"flex items-center space-x-8\">\n00132|               <LingualaLogo size=\"md\" />\n00133|               <nav className=\"hidden md:flex items-center space-x-6\">\n00134|                 <button className=\"text-sm text-gray-600 hover:text-gray-900 px-3 py-2 rounded hover:bg-gray-100 transition-colors\">\n00135|                   Text\n00136|                 </button>\n00137|                 <button className=\"text-sm text-gray-600 hover:text-gray-900 px-3 py-2 rounded hover:bg-gray-100 transition-colors\">\n00138|                   Documents\n00139|                 </button>\n00140|                 <button className=\"text-sm text-gray-600 hover:text-gray-900 px-3 py-2 rounded hover:bg-gray-100 transition-colors\">\n00141|                   Website\n00142|                 </button>\n00143|               </nav>\n00144|             </div>\n00145|             <div className=\"flex items-center space-x-4\">\n00146|               {session?.user && (\n00147|                 <button className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-colors\">\n00148|                   <History className=\"h-5 w-5\" />\n00149|                 </button>\n00150|               )}\n00151|               <UserProfile />\n00152|             </div>\n00153|           </div>\n00154|         </div>\n00155|       </header>\n00156| \n00157|       <main className=\"max-w-screen-xl mx-auto px-6 py-8\">\n00158|         {/* Main Translation Interface */}\n00159|         <div className=\"bg-white\">\n00160|           {/* Language Selection Bar */}\n00161|           <div className=\"flex items-center justify-between mb-6 bg-gray-50 rounded-lg p-4\">\n00162|             <div className=\"flex items-center space-x-4\">\n00163|               <Select value={sourceLang} onValueChange={(value) => {\n00164|                 setSourceLang(value)\n00165|                 if (sourceText.trim()) translateText(sourceText, value, targetLang)\n00166|               }}>\n00167|                 <SelectTrigger className=\"min-w-[140px] border-0 bg-transparent hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\n00168|                   <div className=\"flex items-center space-x-2\">\n00169|                     <span className=\"text-sm\">{getLanguage(sourceLang).flag}</span>\n00170|                     <span className=\"font-medium text-sm\">{getLanguage(sourceLang).name}</span>\n00171|                   </div>\n00172|                 </SelectTrigger>\n00173|                 <SelectContent>\n00174|                   {LANGUAGES.map(lang => (\n00175|                     <SelectItem key={lang.code} value={lang.code}>\n00176|                       <div className=\"flex items-center space-x-2\">\n00177|                         <span>{lang.flag}</span>\n00178|                         <span>{lang.name}</span>\n00179|                       </div>\n00180|                     </SelectItem>\n00181|                   ))}\n00182|                 </SelectContent>\n00183|               </Select>\n00184|             </div>\n00185| \n00186|             <Button\n00187|               variant=\"ghost\"\n00188|               size=\"sm\"\n00189|               onClick={swapLanguages}\n00190|               disabled={sourceLang === \"auto\"}\n00191|               className=\"p-2 rounded-full hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n00192|             >\n00193|               <ArrowUpDown className=\"h-4 w-4\" />\n00194|             </Button>\n00195| \n00196|             <div className=\"flex items-center space-x-4\">\n00197|               <Select value={targetLang} onValueChange={(value) => {\n00198|                 setTargetLang(value)\n00199|                 if (sourceText.trim()) translateText(sourceText, sourceLang, value)\n00200|               }}>\n00201|                 <SelectTrigger className=\"min-w-[140px] border-0 bg-transparent hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\n00202|                   <div className=\"flex items-center space-x-2\">\n00203|                     <span className=\"text-sm\">{getLanguage(targetLang).flag}</span>\n00204|                     <span className=\"font-medium text-sm\">{getLanguage(targetLang).name}</span>\n00205|                   </div>\n00206|                 </SelectTrigger>\n00207|                 <SelectContent>\n00208|                   {LANGUAGES.filter(lang => lang.code !== \"auto\").map(lang => (\n00209|                     <SelectItem key={lang.code} value={lang.code}>\n00210|                       <div className=\"flex items-center space-x-2\">\n00211|                         <span>{lang.flag}</span>\n00212|                         <span>{lang.name}</span>\n00213|                       </div>\n00214|                     </SelectItem>\n00215|                   ))}\n00216|                 </SelectContent>\n00217|               </Select>\n00218|             </div>\n00219|           </div>\n00220| \n00221|           {/* Translation Areas */}\n00222|           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-0 border border-gray-200 rounded-lg overflow-hidden\">\n00223|             {/* Source Text */}\n00224|             <div className=\"relative\">\n00225|               <div className=\"border-b border-gray-200 lg:border-b-0 lg:border-r\">\n00226|                 <Textarea\n00227|                   value={sourceText}\n00228|                   onChange={(e) => handleSourceTextChange(e.target.value)}\n00229|                   onFocus={() => setFocusedArea('source')}\n00230|                   onBlur={() => setFocusedArea(null)}\n00231|                   placeholder=\"Enter text\"\n00232|                   className=\"min-h-[300px] text-lg border-0 rounded-none resize-none focus:ring-2 focus:ring-blue-500 focus-visible:ring-2 focus-visible:ring-blue-500 p-6\"\n00233|                   style={{ fontSize: '16px', lineHeight: '1.5' }}\n00234|                 />\n00235|                 \n00236|                 {/* Source Text Controls */}\n00237|                 <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\n00238|                   <div className=\"flex items-center space-x-2\">\n00239|                     {sourceText && (\n00240|                       <Button\n00241|                         variant=\"ghost\"\n00242|                         size=\"sm\"\n00243|                         onClick={clearText}\n00244|                         className=\"p-2 hover:bg-gray-100 rounded-full\"\n00245|                       >\n00246|                         <X className=\"h-4 w-4\" />\n00247|                       </Button>\n00248|                     )}\n00249|                     {session?.user && (\n00250|                       <Button\n00251|                         variant=\"ghost\"\n00252|                         size=\"sm\"\n00253|                         className=\"p-2 hover:bg-gray-100 rounded-full\"\n00254|                       >\n00255|                         <Mic className=\"h-4 w-4\" />\n00256|                       </Button>\n00257|                     )}\n00258|                   </div>\n00259|                   \n00260|                   <div className=\"text-xs text-gray-600\">\n00261|                     {sourceText.length} / 5000\n00262|                   </div>\n00263|                 </div>\n00264|               </div>\n00265|             </div>\n00266| \n00267|             {/* Translated Text */}\n00268|             <div className=\"relative bg-gray-50\">\n00269|               <Textarea\n00270|                 value={translatedText}\n00271|                 readOnly\n00272|                 placeholder={isTranslating ? \"Translating...\" : \"Translation\"}\n00273|                 className=\"min-h-[300px] text-lg border-0 rounded-none resize-none focus:ring-2 focus:ring-blue-500 focus-visible:ring-2 focus-visible:ring-blue-500 p-6 bg-gray-50\"\n00274|                 style={{ fontSize: '16px', lineHeight: '1.5' }}\n00275|               />\n00276|               \n00277|               {/* Translation Controls */}\n00278|               {translatedText && (\n00279|                 <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\n00280|                   <div className=\"flex items-center space-x-2\">\n00281|                     <Button\n00282|                       variant=\"ghost\"\n00283|                       size=\"sm\"\n00284|                       onClick={() => copyToClipboard(translatedText)}\n00285|                       className=\"p-2 hover:bg-gray-200 rounded-full\"\n00286|                     >\n00287|                       {copySuccess ? <Check className=\"h-4 w-4 text-green-600\" /> : <Copy className=\"h-4 w-4\" />}\n00288|                     </Button>\n00289|                     {session?.user && (\n00290|                       <>\n00291|                         <Button\n00292|                           variant=\"ghost\"\n00293|                           size=\"sm\"\n00294|                           className=\"p-2 hover:bg-gray-200 rounded-full\"\n00295|                         >\n00296|                           <Volume2 className=\"h-4 w-4\" />\n00297|                         </Button>\n00298|                         <Button\n00299|                           variant=\"ghost\"\n00300|                           size=\"sm\"\n00301|                           className=\"p-2 hover:bg-gray-200 rounded-full\"\n00302|                         >\n00303|                           <Star className=\"h-4 w-4\" />\n00304|                         </Button>\n00305|                       </>\n00306|                     )}\n00307|                   </div>\n00308|                   \n00309|                   <Button\n00310|                     variant=\"ghost\"\n00311|                     size=\"sm\"\n00312|                     className=\"p-2 hover:bg-gray-200 rounded-full\"\n00313|                   >\n00314|                     <MoreHorizontal className=\"h-4 w-4\" />\n00315|                   </Button>\n00316|                 </div>\n00317|               )}\n00318|             </div>\n00319|           </div>\n00320| \n00321|           {/* Bottom Actions */}\n00322|           {session?.user && (\n00323|             <div className=\"mt-6 flex items-center justify-between\">\n00324|               <div className=\"flex items-center space-x-4\">\n00325|                 <Button variant=\"outline\" size=\"sm\">\n00326|                   <FileText className=\"h-4 w-4 mr-2\" />\n00327|                   Translate a document\n00328|                 </Button>\n00329|               </div>\n00330|               \n00331|               <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n00332|                 <span>Powered by Linguala Translate</span>\n00333|               </div>\n00334|             </div>\n00335|           )}\n00336|         </div>\n00337| \n00338|         {/* Premium features and CTA */}\n00339|         <div className=\"mt-12\">\n00340|           {!session?.user ? (\n00341|             <div className=\"text-center\">\n00342|               <div className=\"bg-blue-50 rounded-lg p-8 max-w-2xl mx-auto mb-8\">\n00343|                 <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n00344|                   Get more with Linguala Translate\n00345|                 </h2>\n00346|                 <p className=\"text-gray-600 mb-6\">\n00347|                   Save translations, access more languages, and get personalized suggestions.\n00348|                 </p>\n00349|                 <div className=\"space-x-4\">\n00350|                   <Button \n00351|                     onClick={() => window.location.href = '/auth/signin'}\n00352|                     className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2\"\n00353|                   >\n00354|                     Sign In\n00355|                   </Button>\n00356|                   <Button \n00357|                     onClick={() => window.location.href = '/auth/signup'}\n00358|                     variant=\"outline\"\n00359|                     className=\"border-blue-600 text-blue-600 hover:bg-blue-50 px-6 py-2\"\n00360|                   >\n00361|                     Create Account\n00362|                   </Button>\n00363|                 </div>\n00364|               </div>\n00365|               <PremiumFeatures compact />\n00366|             </div>\n00367|           ) : (\n00368|             <PremiumFeatures compact />\n00369|           )}\n00370|         </div>\n00371|       </main>\n00372|     </div>\n00373|   )\n00374| }\n</file>",
    "metadata": {
      "preview": "\"use client\"\n\nimport { useState, useRef, useEffect } from \"react\"\nimport { useSession } from \"next-auth/react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { \n  ArrowUpDown, Copy, Volume2, Star, MoreHorizontal,\n  Check, X, Mic, Settings, History, FileText\n} from \"lucide-react\"\nimport { toast } from \"sonner\"\nimport { LingualaLogo } from \"@/components/ui/linguala-logo\"\nimport { UserProfile } from \"@/components/user-profile\"\nimport { PremiumFeatures } from \"@/components/premium-features\"\n\n// Common languages like Google Translate\nconst LANGUAGES = [\n  { code: \"auto\", name: \"Detect language\", flag: \"🌐\" },\n  { code: \"en\", name: \"English\", flag: \"🇬🇧\" },"
    },
    "title": "components/linguala-translator.tsx",
    "time": {
      "start": 1759433528087,
      "end": 1759433528093
    }
  }
}
{
  "id": "prt_9a903f94d001oin5Me92taisnF",
  "messageID": "msg_9a900a161001n7F8OFwL5CYRAw",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "write",
  "callID": "toolu_01SgVna9VoK9yaNjV35eQT76",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/documents/page.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { ArrowUpDown, FileText, Zap, Shield, Clock } from \"lucide-react\"\nimport { LingualaLogo } from \"@/components/ui/linguala-logo\"\nimport { DocumentUploader } from \"@/components/documents/document-uploader\"\n\n// Same languages as the main translator\nconst LANGUAGES = [\n  { code: \"auto\", name: \"Detect language\", flag: \"🌐\" },\n  { code: \"en\", name: \"English\", flag: \"🇬🇧\" },\n  { code: \"es\", name: \"Spanish\", flag: \"🇪🇸\" },\n  { code: \"fr\", name: \"French\", flag: \"🇫🇷\" },\n  { code: \"de\", name: \"German\", flag: \"🇩🇪\" },\n  { code: \"it\", name: \"Italian\", flag: \"🇮🇹\" },\n  { code: \"pt\", name: \"Portuguese\", flag: \"🇵🇹\" },\n  { code: \"ru\", name: \"Russian\", flag: \"🇷🇺\" },\n  { code: \"ja\", name: \"Japanese\", flag: \"🇯🇵\" },\n  { code: \"ko\", name: \"Korean\", flag: \"🇰🇷\" },\n  { code: \"zh\", name: \"Chinese\", flag: \"🇨🇳\" },\n  { code: \"ar\", name: \"Arabic\", flag: \"🇸🇦\" },\n  { code: \"hi\", name: \"Hindi\", flag: \"🇮🇳\" },\n  { code: \"nl\", name: \"Dutch\", flag: \"🇳🇱\" },\n  { code: \"sv\", name: \"Swedish\", flag: \"🇸🇪\" },\n  { code: \"da\", name: \"Danish\", flag: \"🇩🇰\" },\n  { code: \"no\", name: \"Norwegian\", flag: \"🇳🇴\" },\n  { code: \"fi\", name: \"Finnish\", flag: \"🇫🇮\" },\n  { code: \"pl\", name: \"Polish\", flag: \"🇵🇱\" },\n  { code: \"cs\", name: \"Czech\", flag: \"🇨🇿\" },\n  { code: \"hu\", name: \"Hungarian\", flag: \"🇭🇺\" },\n  { code: \"tr\", name: \"Turkish\", flag: \"🇹🇷\" },\n  { code: \"th\", name: \"Thai\", flag: \"🇹🇭\" },\n  { code: \"vi\", name: \"Vietnamese\", flag: \"🇻🇳\" }\n]\n\nexport default function DocumentsPage() {\n  const [sourceLang, setSourceLang] = useState(\"auto\")\n  const [targetLang, setTargetLang] = useState(\"en\")\n  const [processedFiles, setProcessedFiles] = useState<any[]>([])\n\n  const getLanguage = (code: string) => {\n    return LANGUAGES.find(lang => lang.code === code) || LANGUAGES[1]\n  }\n\n  const swapLanguages = () => {\n    if (sourceLang === \"auto\") return\n    \n    setSourceLang(targetLang)\n    setTargetLang(sourceLang)\n  }\n\n  const handleFileProcessed = (result: any) => {\n    setProcessedFiles(prev => [...prev, result])\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-screen-xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-8\">\n              <LingualaLogo size=\"md\" />\n              <nav className=\"hidden md:flex items-center space-x-6\">\n                <Button \n                  variant=\"ghost\"\n                  onClick={() => window.location.href = '/'}\n                  className=\"text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 px-3 py-2 rounded transition-colors\"\n                >\n                  Text\n                </Button>\n                <div className=\"text-sm text-blue-600 bg-blue-50 font-medium px-3 py-2 rounded\">\n                  Documents\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-screen-xl mx-auto px-6 py-8\">\n        {/* Page Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Document Translation</h1>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Upload PDF, Word, or text documents and get professional translations while preserving the original formatting and layout.\n          </p>\n        </div>\n\n        {/* Language Selection */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-8\">\n          <h2 className=\"text-lg font-semibold mb-4\">Translation Settings</h2>\n          \n          <div className=\"flex items-center justify-center space-x-6 max-w-2xl mx-auto\">\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">From</label>\n              <Select value={sourceLang} onValueChange={setSourceLang}>\n                <SelectTrigger className=\"w-full\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm\">{getLanguage(sourceLang).flag}</span>\n                    <span>{getLanguage(sourceLang).name}</span>\n                  </div>\n                </SelectTrigger>\n                <SelectContent>\n                  {LANGUAGES.map(lang => (\n                    <SelectItem key={lang.code} value={lang.code}>\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{lang.flag}</span>\n                        <span>{lang.name}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={swapLanguages}\n              disabled={sourceLang === \"auto\"}\n              className=\"p-3 rounded-full hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed mt-6\"\n            >\n              <ArrowUpDown className=\"h-4 w-4\" />\n            </Button>\n\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">To</label>\n              <Select value={targetLang} onValueChange={setTargetLang}>\n                <SelectTrigger className=\"w-full\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm\">{getLanguage(targetLang).flag}</span>\n                    <span>{getLanguage(targetLang).name}</span>\n                  </div>\n                </SelectTrigger>\n                <SelectContent>\n                  {LANGUAGES.filter(lang => lang.code !== \"auto\").map(lang => (\n                    <SelectItem key={lang.code} value={lang.code}>\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{lang.flag}</span>\n                        <span>{lang.name}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </div>\n\n        {/* Document Uploader */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-8\">\n          <h2 className=\"text-lg font-semibold mb-4\">Upload Documents</h2>\n          <DocumentUploader \n            sourceLang={sourceLang}\n            targetLang={targetLang}\n            onFileProcessed={handleFileProcessed}\n          />\n        </div>\n\n        {/* Features Section */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 text-center\">\n            <FileText className=\"h-12 w-12 text-blue-500 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">Format Preservation</h3>\n            <p className=\"text-gray-600 text-sm\">\n              Maintains original document layout, fonts, and formatting during translation.\n            </p>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border p-6 text-center\">\n            <Zap className=\"h-12 w-12 text-green-500 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">Fast Processing</h3>\n            <p className=\"text-gray-600 text-sm\">\n              Advanced AI processing for quick and accurate document translation.\n            </p>\n          </div>\n          \n          <div className=\"bg-white rounded-lg shadow-sm border p-6 text-center\">\n            <Shield className=\"h-12 w-12 text-purple-500 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">Secure & Private</h3>\n            <p className=\"text-gray-600 text-sm\">\n              Documents are processed securely and automatically deleted after translation.\n            </p>\n          </div>\n        </div>\n\n        {/* Supported Formats */}\n        <div className=\"bg-blue-50 rounded-lg p-6 text-center\">\n          <h3 className=\"text-lg font-semibold text-blue-900 mb-4\">Supported Document Formats</h3>\n          <div className=\"flex justify-center items-center space-x-8 text-sm text-blue-800\">\n            <div className=\"flex items-center space-x-2\">\n              <FileText className=\"h-5 w-5 text-red-500\" />\n              <span>PDF Documents</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <FileText className=\"h-5 w-5 text-blue-500\" />\n              <span>Word Documents (.docx)</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <FileText className=\"h-5 w-5 text-gray-500\" />\n              <span>Text Files (.txt)</span>\n            </div>\n          </div>\n          <p className=\"text-xs text-blue-700 mt-4\">\n            Maximum file size: 10MB per document\n          </p>\n        </div>\n\n        {/* Processing Status */}\n        {processedFiles.length > 0 && (\n          <div className=\"mt-8 bg-white rounded-lg shadow-sm border p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Recently Translated</h3>\n            <div className=\"space-y-3\">\n              {processedFiles.map((file, index) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-green-50 rounded border border-green-200\">\n                  <div className=\"flex items-center space-x-3\">\n                    <FileText className=\"h-5 w-5 text-green-600\" />\n                    <span className=\"font-medium text-green-800\">{file.originalFileName}</span>\n                    <span className=\"text-sm text-green-600\">→ {file.translatedFileName}</span>\n                  </div>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => window.open(file.downloadPath, '_blank')}\n                    className=\"bg-green-600 hover:bg-green-700\"\n                  >\n                    Download\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  )\n}"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "filepath": "/home/user/project/app/documents/page.tsx",
      "exists": false
    },
    "title": "app/documents/page.tsx",
    "time": {
      "start": 1759477267987,
      "end": 1759477267988
    }
  }
}
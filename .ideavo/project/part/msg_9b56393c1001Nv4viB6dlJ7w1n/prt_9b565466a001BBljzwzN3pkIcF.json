{
  "id": "prt_9b565466a001BBljzwzN3pkIcF",
  "messageID": "msg_9b56393c1001Nv4viB6dlJ7w1n",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "edit",
  "callID": "toolu_01JVYMJsjG5tYVuihdjSnVp5",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/components/linguala-translator.tsx",
      "oldString": "  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <header className=\"border-b border-gray-200\">\n        <div className=\"max-w-screen-xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-8\">\n              <LingualaLogo size=\"md\" />\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-colors\">\n                <History className=\"h-5 w-5\" />\n              </button>\n              <button className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-colors\">\n                <Settings className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-screen-xl mx-auto px-6 py-8\">\n        {/* Main Processing Interface */}\n        <div className=\"bg-white\">\n          {/* Operation Selection */}\n          <div className=\"mb-6\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              {OPERATIONS.map((op) => (\n                <button\n                  key={op.id}\n                  onClick={() => handleOperationChange(op.id)}\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n                    operation === op.id\n                      ? 'bg-blue-100 text-blue-700'\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                  }`}\n                >\n                  <span className=\"mr-2\">{op.icon}</span>\n                  {op.name}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Language Selection Bar - Only show for translation */}\n          {operation === 'translate' && (\n            <div className=\"flex items-center justify-between mb-6 bg-gray-50 rounded-lg p-4\">\n              <div className=\"flex items-center space-x-4\">\n                <Select value={sourceLang} onValueChange={setSourceLang}>\n                  <SelectTrigger className=\"min-w-[140px] border-0 bg-transparent hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm\">{getLanguage(sourceLang).flag}</span>\n                      <span className=\"font-medium text-sm\">{getLanguage(sourceLang).name}</span>\n                    </div>\n                  </SelectTrigger>\n                  <SelectContent>\n                    {LANGUAGES.map(lang => (\n                      <SelectItem key={lang.code} value={lang.code}>\n                        <div className=\"flex items-center space-x-2\">\n                          <span>{lang.flag}</span>\n                          <span>{lang.name}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={swapLanguages}\n                className=\"p-2 hover:bg-gray-200 rounded-full\"\n                disabled={sourceLang === \"auto\"}\n              >\n                <ArrowUpDown className=\"h-4 w-4\" />\n              </Button>\n\n              <div className=\"flex items-center space-x-4\">\n                <Select value={targetLang} onValueChange={setTargetLang}>\n                  <SelectTrigger className=\"min-w-[140px] border-0 bg-transparent hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm\">{getLanguage(targetLang).flag}</span>\n                      <span className=\"font-medium text-sm\">{getLanguage(targetLang).name}</span>\n                    </div>\n                  </SelectTrigger>\n                  <SelectContent>\n                    {LANGUAGES.filter(lang => lang.code !== \"auto\").map(lang => (\n                      <SelectItem key={lang.code} value={lang.code}>\n                        <div className=\"flex items-center space-x-2\">\n                          <span>{lang.flag}</span>\n                          <span>{lang.name}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          )}\n\n          {/* Processing Areas */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-0 border border-gray-200 rounded-lg overflow-hidden\">\n            {/* Source Text */}\n            <div className=\"relative\">\n              <div className=\"border-b border-gray-200 lg:border-b-0 lg:border-r\">\n                <Textarea\n                  value={sourceText}\n                  onChange={(e) => handleSourceTextChange(e.target.value)}\n                  onFocus={() => setFocusedArea('source')}\n                  onBlur={() => setFocusedArea(null)}\n                  placeholder={getPlaceholderText()}\n                  className=\"min-h-[300px] text-lg border-0 rounded-none resize-none focus:ring-2 focus:ring-blue-500 focus-visible:ring-2 focus-visible:ring-blue-500 p-6\"\n                  style={{ fontSize: '16px', lineHeight: '1.5' }}\n                />\n                \n                {/* Source Text Controls */}\n                <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    {sourceText && (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={clearText}\n                        className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </Button>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      disabled\n                    >\n                      <Mic className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Result Text */}\n            <div className=\"relative\">\n              <div className=\"min-h-[300px] p-6 text-lg\" style={{ fontSize: '16px', lineHeight: '1.5' }}>\n                {isLoading ? (\n                  <div className=\"flex items-center justify-center h-full\">\n                    <Loader2 className=\"h-6 w-6 animate-spin text-blue-500\" />\n                  </div>\n                ) : (\n                  <div \n                    className={`whitespace-pre-wrap ${!resultText ? 'text-gray-400' : 'text-gray-900'}`}\n                    onFocus={() => setFocusedArea('target')}\n                    onBlur={() => setFocusedArea(null)}\n                    tabIndex={0}\n                  >\n                    {resultText || `${operation === 'translate' ? 'Translation' : operation === 'improve' ? 'Improved text' : operation === 'rephrase' ? 'Rephrased text' : 'Summary'} will appear here`}\n                  </div>\n                )}\n              </div>\n\n              {/* Result Text Controls */}\n              {resultText && !isLoading && (\n                <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => copyToClipboard(resultText)}\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                    >\n                      {copySuccess ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      disabled\n                    >\n                      <Volume2 className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      disabled\n                    >\n                      <Star className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                  \n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"p-2 hover:bg-gray-200 rounded-full\"\n                    disabled\n                  >\n                    <MoreHorizontal className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Bottom Actions */}\n          <div className=\"mt-6 flex items-center justify-end\">\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              <span>Powered by Linguala</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Feature showcase */}\n        <div className=\"mt-12\">\n          <div className=\"text-center\">\n            <div className=\"bg-blue-50 rounded-lg p-8 max-w-2xl mx-auto\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n                AI-Powered Text Processing Platform\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                Advanced AI tools for translation, writing improvement, rephrasing, and summarization. Professional quality results in seconds.\n              </p>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-700\">\n                <div className=\"text-center\">\n                  <div className=\"font-semibold\">25+</div>\n                  <div>Languages</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-semibold\">4</div>\n                  <div>AI Tools</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-semibold\">Fast</div>\n                  <div>Processing</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-semibold\">Secure</div>\n                  <div>& Private</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  )",
      "newString": "  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <header className=\"border-b border-gray-200\">\n        <div className=\"max-w-screen-xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-8\">\n              <LingualaLogo size=\"md\" />\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-colors\">\n                <History className=\"h-5 w-5\" />\n              </button>\n              <button className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-colors\">\n                <Settings className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-screen-xl mx-auto px-6 py-8\">\n        {/* Tab Navigation */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <TabsList className=\"grid w-full max-w-md grid-cols-2 mb-8\">\n            <TabsTrigger value=\"translate\" className=\"flex items-center gap-2\">\n              <Languages className=\"h-4 w-4\" />\n              Translate text\n              <div className=\"text-xs text-gray-500\">35 languages</div>\n            </TabsTrigger>\n            <TabsTrigger value=\"write\" className=\"flex items-center gap-2\">\n              <FileText className=\"h-4 w-4\" />\n              Write\n              <div className=\"text-xs text-gray-500\">AI-powered edits</div>\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"translate\" className=\"space-y-6\">\n            {/* Language Selection Bar */}\n            <div className=\"flex items-center justify-between bg-gray-50 rounded-lg p-4\">\n              <Select value={sourceLang} onValueChange={setSourceLang}>\n                <SelectTrigger className=\"min-w-[160px] border-0 bg-transparent hover:bg-gray-100\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm\">{getLanguage(sourceLang).flag}</span>\n                    <span className=\"font-medium text-sm\">{getLanguage(sourceLang).name}</span>\n                  </div>\n                </SelectTrigger>\n                <SelectContent>\n                  {LANGUAGES.map(lang => (\n                    <SelectItem key={lang.code} value={lang.code}>\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{lang.flag}</span>\n                        <span>{lang.name}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={swapLanguages}\n                className=\"p-2 hover:bg-gray-200 rounded-full\"\n                disabled={sourceLang === \"auto\"}\n              >\n                <ArrowUpDown className=\"h-4 w-4\" />\n              </Button>\n\n              <Select value={targetLang} onValueChange={setTargetLang}>\n                <SelectTrigger className=\"min-w-[160px] border-0 bg-transparent hover:bg-gray-100\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm\">{getLanguage(targetLang).flag}</span>\n                    <span className=\"font-medium text-sm\">{getLanguage(targetLang).name}</span>\n                  </div>\n                </SelectTrigger>\n                <SelectContent>\n                  {LANGUAGES.filter(lang => lang.code !== \"auto\").map(lang => (\n                    <SelectItem key={lang.code} value={lang.code}>\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{lang.flag}</span>\n                        <span>{lang.name}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"write\" className=\"space-y-6\">\n            {/* Write Mode Settings */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <Label htmlFor=\"corrections-only\" className=\"text-sm font-medium\">Corrections only</Label>\n                  <Switch\n                    id=\"corrections-only\"\n                    checked={correctionsOnly}\n                    onCheckedChange={setCorrectionsOnly}\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label className=\"text-sm font-medium mb-2 block\">Style</Label>\n                    <Select value={writingStyle} onValueChange={setWritingStyle}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {WRITING_STYLES.map(style => (\n                          <SelectItem key={style.value} value={style.value}>\n                            {style.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  <div>\n                    <Label className=\"text-sm font-medium mb-2 block\">Tone</Label>\n                    <Select value={tone} onValueChange={setTone}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {TONES.map(toneOption => (\n                          <SelectItem key={toneOption.value} value={toneOption.value}>\n                            {toneOption.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </TabsContent>\n\n          {/* Processing Areas */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-0 border border-gray-200 rounded-lg overflow-hidden\">\n            {/* Source Text */}\n            <div className=\"relative\">\n              <div className=\"border-b border-gray-200 lg:border-b-0 lg:border-r\">\n                <Textarea\n                  value={sourceText}\n                  onChange={(e) => handleSourceTextChange(e.target.value)}\n                  onFocus={() => setFocusedArea('source')}\n                  onBlur={() => setFocusedArea(null)}\n                  placeholder={getPlaceholderText()}\n                  className=\"min-h-[400px] text-lg border-0 rounded-none resize-none focus:ring-2 focus:ring-blue-500 focus-visible:ring-2 focus-visible:ring-blue-500 p-6\"\n                  style={{ fontSize: '16px', lineHeight: '1.5' }}\n                />\n                \n                {/* Source Text Controls */}\n                <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    {sourceText && (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={clearText}\n                        className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </Button>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      disabled\n                    >\n                      <Mic className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Result Text */}\n            <div className=\"relative\">\n              {/* Editing Tools Sidebar */}\n              {activeTab === 'write' && (\n                <div className=\"absolute top-0 right-0 w-64 h-full bg-gray-50 border-l border-gray-200 p-4\">\n                  <div className=\"text-sm font-medium text-gray-700 mb-4\">Editing tools</div>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <Check className=\"h-4 w-4 text-green-500\" />\n                        <span className=\"text-sm\">Corrections only</span>\n                      </div>\n                      <Switch checked={correctionsOnly} onCheckedChange={setCorrectionsOnly} />\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <FileText className=\"h-4 w-4\" />\n                        <span className=\"text-sm font-medium\">Styles</span>\n                      </div>\n                      <Select value={`${writingStyle}-${tone}`} onValueChange={(value) => {\n                        const [style, toneValue] = value.split('-')\n                        setWritingStyle(style)\n                        setTone(toneValue)\n                      }}>\n                        <SelectTrigger className=\"text-sm\">\n                          <SelectValue placeholder=\"None set\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"simple-friendly\">Simple & Friendly</SelectItem>\n                          <SelectItem value=\"business-confident\">Business & Confident</SelectItem>\n                          <SelectItem value=\"casual-enthusiastic\">Casual & Enthusiastic</SelectItem>\n                          <SelectItem value=\"academic-diplomatic\">Academic & Diplomatic</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n                      <Settings className=\"h-4 w-4\" />\n                      <span>Show changes</span>\n                      <Switch disabled />\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-8\">\n                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Customizations</div>\n                    <Button variant=\"outline\" className=\"w-full text-sm\">\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Custom rules\n                      <span className=\"ml-auto bg-blue-600 text-white text-xs px-2 py-1 rounded\">Pro</span>\n                    </Button>\n                  </div>\n                </div>\n              )}\n              \n              <div className={`min-h-[400px] p-6 text-lg ${activeTab === 'write' ? 'mr-64' : ''}`} style={{ fontSize: '16px', lineHeight: '1.5' }}>\n                {isLoading ? (\n                  <div className=\"flex items-center justify-center h-full\">\n                    <Loader2 className=\"h-6 w-6 animate-spin text-blue-500\" />\n                  </div>\n                ) : (\n                  <div \n                    className={`whitespace-pre-wrap ${!resultText ? 'text-gray-400' : 'text-gray-900'}`}\n                    onFocus={() => setFocusedArea('target')}\n                    onBlur={() => setFocusedArea(null)}\n                    tabIndex={0}\n                  >\n                    {resultText || (activeTab === 'translate' ? 'Translation will appear here' : 'Improved text will appear here')}\n                  </div>\n                )}\n              </div>\n\n              {/* Result Text Controls */}\n              {resultText && !isLoading && (\n                <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => copyToClipboard(resultText)}\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                    >\n                      {copySuccess ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      disabled\n                    >\n                      <Volume2 className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"p-2 hover:bg-gray-200 rounded-full\"\n                      disabled\n                    >\n                      <Star className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                  \n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"p-2 hover:bg-gray-200 rounded-full\"\n                    disabled\n                  >\n                    <MoreHorizontal className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        </Tabs>\n      </main>\n    </div>\n  )"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "diff": "Index: /home/user/project/components/linguala-translator.tsx\n===================================================================\n--- /home/user/project/components/linguala-translator.tsx\n+++ /home/user/project/components/linguala-translator.tsx\n@@ -215,53 +215,44 @@\n         </div>\n       </header>\n \n       <main className=\"max-w-screen-xl mx-auto px-6 py-8\">\n-        {/* Main Processing Interface */}\n-        <div className=\"bg-white\">\n-          {/* Operation Selection */}\n-          <div className=\"mb-6\">\n-            <div className=\"flex items-center space-x-2 mb-4\">\n-              {OPERATIONS.map((op) => (\n-                <button\n-                  key={op.id}\n-                  onClick={() => handleOperationChange(op.id)}\n-                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\n-                    operation === op.id\n-                      ? 'bg-blue-100 text-blue-700'\n-                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n-                  }`}\n-                >\n-                  <span className=\"mr-2\">{op.icon}</span>\n-                  {op.name}\n-                </button>\n-              ))}\n-            </div>\n-          </div>\n+        {/* Tab Navigation */}\n+        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n+          <TabsList className=\"grid w-full max-w-md grid-cols-2 mb-8\">\n+            <TabsTrigger value=\"translate\" className=\"flex items-center gap-2\">\n+              <Languages className=\"h-4 w-4\" />\n+              Translate text\n+              <div className=\"text-xs text-gray-500\">35 languages</div>\n+            </TabsTrigger>\n+            <TabsTrigger value=\"write\" className=\"flex items-center gap-2\">\n+              <FileText className=\"h-4 w-4\" />\n+              Write\n+              <div className=\"text-xs text-gray-500\">AI-powered edits</div>\n+            </TabsTrigger>\n+          </TabsList>\n \n-          {/* Language Selection Bar - Only show for translation */}\n-          {operation === 'translate' && (\n-            <div className=\"flex items-center justify-between mb-6 bg-gray-50 rounded-lg p-4\">\n-              <div className=\"flex items-center space-x-4\">\n-                <Select value={sourceLang} onValueChange={setSourceLang}>\n-                  <SelectTrigger className=\"min-w-[140px] border-0 bg-transparent hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\n-                    <div className=\"flex items-center space-x-2\">\n-                      <span className=\"text-sm\">{getLanguage(sourceLang).flag}</span>\n-                      <span className=\"font-medium text-sm\">{getLanguage(sourceLang).name}</span>\n-                    </div>\n-                  </SelectTrigger>\n-                  <SelectContent>\n-                    {LANGUAGES.map(lang => (\n-                      <SelectItem key={lang.code} value={lang.code}>\n-                        <div className=\"flex items-center space-x-2\">\n-                          <span>{lang.flag}</span>\n-                          <span>{lang.name}</span>\n-                        </div>\n-                      </SelectItem>\n-                    ))}\n-                  </SelectContent>\n-                </Select>\n-              </div>\n+          <TabsContent value=\"translate\" className=\"space-y-6\">\n+            {/* Language Selection Bar */}\n+            <div className=\"flex items-center justify-between bg-gray-50 rounded-lg p-4\">\n+              <Select value={sourceLang} onValueChange={setSourceLang}>\n+                <SelectTrigger className=\"min-w-[160px] border-0 bg-transparent hover:bg-gray-100\">\n+                  <div className=\"flex items-center space-x-2\">\n+                    <span className=\"text-sm\">{getLanguage(sourceLang).flag}</span>\n+                    <span className=\"font-medium text-sm\">{getLanguage(sourceLang).name}</span>\n+                  </div>\n+                </SelectTrigger>\n+                <SelectContent>\n+                  {LANGUAGES.map(lang => (\n+                    <SelectItem key={lang.code} value={lang.code}>\n+                      <div className=\"flex items-center space-x-2\">\n+                        <span>{lang.flag}</span>\n+                        <span>{lang.name}</span>\n+                      </div>\n+                    </SelectItem>\n+                  ))}\n+                </SelectContent>\n+              </Select>\n \n               <Button\n                 variant=\"ghost\"\n                 size=\"sm\"\n@@ -271,30 +262,80 @@\n               >\n                 <ArrowUpDown className=\"h-4 w-4\" />\n               </Button>\n \n-              <div className=\"flex items-center space-x-4\">\n-                <Select value={targetLang} onValueChange={setTargetLang}>\n-                  <SelectTrigger className=\"min-w-[140px] border-0 bg-transparent hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\n-                    <div className=\"flex items-center space-x-2\">\n-                      <span className=\"text-sm\">{getLanguage(targetLang).flag}</span>\n-                      <span className=\"font-medium text-sm\">{getLanguage(targetLang).name}</span>\n-                    </div>\n-                  </SelectTrigger>\n-                  <SelectContent>\n-                    {LANGUAGES.filter(lang => lang.code !== \"auto\").map(lang => (\n-                      <SelectItem key={lang.code} value={lang.code}>\n-                        <div className=\"flex items-center space-x-2\">\n-                          <span>{lang.flag}</span>\n-                          <span>{lang.name}</span>\n-                        </div>\n-                      </SelectItem>\n-                    ))}\n-                  </SelectContent>\n-                </Select>\n+              <Select value={targetLang} onValueChange={setTargetLang}>\n+                <SelectTrigger className=\"min-w-[160px] border-0 bg-transparent hover:bg-gray-100\">\n+                  <div className=\"flex items-center space-x-2\">\n+                    <span className=\"text-sm\">{getLanguage(targetLang).flag}</span>\n+                    <span className=\"font-medium text-sm\">{getLanguage(targetLang).name}</span>\n+                  </div>\n+                </SelectTrigger>\n+                <SelectContent>\n+                  {LANGUAGES.filter(lang => lang.code !== \"auto\").map(lang => (\n+                    <SelectItem key={lang.code} value={lang.code}>\n+                      <div className=\"flex items-center space-x-2\">\n+                        <span>{lang.flag}</span>\n+                        <span>{lang.name}</span>\n+                      </div>\n+                    </SelectItem>\n+                  ))}\n+                </SelectContent>\n+              </Select>\n+            </div>\n+          </TabsContent>\n+\n+          <TabsContent value=\"write\" className=\"space-y-6\">\n+            {/* Write Mode Settings */}\n+            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n+              <div className=\"space-y-4\">\n+                <div className=\"flex items-center justify-between\">\n+                  <Label htmlFor=\"corrections-only\" className=\"text-sm font-medium\">Corrections only</Label>\n+                  <Switch\n+                    id=\"corrections-only\"\n+                    checked={correctionsOnly}\n+                    onCheckedChange={setCorrectionsOnly}\n+                  />\n+                </div>\n               </div>\n+              \n+              <div className=\"space-y-4\">\n+                <div className=\"grid grid-cols-2 gap-4\">\n+                  <div>\n+                    <Label className=\"text-sm font-medium mb-2 block\">Style</Label>\n+                    <Select value={writingStyle} onValueChange={setWritingStyle}>\n+                      <SelectTrigger>\n+                        <SelectValue />\n+                      </SelectTrigger>\n+                      <SelectContent>\n+                        {WRITING_STYLES.map(style => (\n+                          <SelectItem key={style.value} value={style.value}>\n+                            {style.label}\n+                          </SelectItem>\n+                        ))}\n+                      </SelectContent>\n+                    </Select>\n+                  </div>\n+                  \n+                  <div>\n+                    <Label className=\"text-sm font-medium mb-2 block\">Tone</Label>\n+                    <Select value={tone} onValueChange={setTone}>\n+                      <SelectTrigger>\n+                        <SelectValue />\n+                      </SelectTrigger>\n+                      <SelectContent>\n+                        {TONES.map(toneOption => (\n+                          <SelectItem key={toneOption.value} value={toneOption.value}>\n+                            {toneOption.label}\n+                          </SelectItem>\n+                        ))}\n+                      </SelectContent>\n+                    </Select>\n+                  </div>\n+                </div>\n+              </div>\n             </div>\n-          )}\n+          </TabsContent>\n \n           {/* Processing Areas */}\n           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-0 border border-gray-200 rounded-lg overflow-hidden\">\n             {/* Source Text */}\n@@ -305,9 +346,9 @@\n                   onChange={(e) => handleSourceTextChange(e.target.value)}\n                   onFocus={() => setFocusedArea('source')}\n                   onBlur={() => setFocusedArea(null)}\n                   placeholder={getPlaceholderText()}\n-                  className=\"min-h-[300px] text-lg border-0 rounded-none resize-none focus:ring-2 focus:ring-blue-500 focus-visible:ring-2 focus-visible:ring-blue-500 p-6\"\n+                  className=\"min-h-[400px] text-lg border-0 rounded-none resize-none focus:ring-2 focus:ring-blue-500 focus-visible:ring-2 focus-visible:ring-blue-500 p-6\"\n                   style={{ fontSize: '16px', lineHeight: '1.5' }}\n                 />\n                 \n                 {/* Source Text Controls */}\n@@ -340,9 +381,63 @@\n             </div>\n \n             {/* Result Text */}\n             <div className=\"relative\">\n-              <div className=\"min-h-[300px] p-6 text-lg\" style={{ fontSize: '16px', lineHeight: '1.5' }}>\n+              {/* Editing Tools Sidebar */}\n+              {activeTab === 'write' && (\n+                <div className=\"absolute top-0 right-0 w-64 h-full bg-gray-50 border-l border-gray-200 p-4\">\n+                  <div className=\"text-sm font-medium text-gray-700 mb-4\">Editing tools</div>\n+                  \n+                  <div className=\"space-y-4\">\n+                    <div className=\"flex items-center justify-between\">\n+                      <div className=\"flex items-center gap-2\">\n+                        <Check className=\"h-4 w-4 text-green-500\" />\n+                        <span className=\"text-sm\">Corrections only</span>\n+                      </div>\n+                      <Switch checked={correctionsOnly} onCheckedChange={setCorrectionsOnly} />\n+                    </div>\n+                    \n+                    <div className=\"space-y-2\">\n+                      <div className=\"flex items-center gap-2\">\n+                        <FileText className=\"h-4 w-4\" />\n+                        <span className=\"text-sm font-medium\">Styles</span>\n+                      </div>\n+                      <Select value={`${writingStyle}-${tone}`} onValueChange={(value) => {\n+                        const [style, toneValue] = value.split('-')\n+                        setWritingStyle(style)\n+                        setTone(toneValue)\n+                      }}>\n+                        <SelectTrigger className=\"text-sm\">\n+                          <SelectValue placeholder=\"None set\" />\n+                        </SelectTrigger>\n+                        <SelectContent>\n+                          <SelectItem value=\"simple-friendly\">Simple & Friendly</SelectItem>\n+                          <SelectItem value=\"business-confident\">Business & Confident</SelectItem>\n+                          <SelectItem value=\"casual-enthusiastic\">Casual & Enthusiastic</SelectItem>\n+                          <SelectItem value=\"academic-diplomatic\">Academic & Diplomatic</SelectItem>\n+                        </SelectContent>\n+                      </Select>\n+                    </div>\n+                    \n+                    <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n+                      <Settings className=\"h-4 w-4\" />\n+                      <span>Show changes</span>\n+                      <Switch disabled />\n+                    </div>\n+                  </div>\n+                  \n+                  <div className=\"mt-8\">\n+                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Customizations</div>\n+                    <Button variant=\"outline\" className=\"w-full text-sm\">\n+                      <Settings className=\"h-4 w-4 mr-2\" />\n+                      Custom rules\n+                      <span className=\"ml-auto bg-blue-600 text-white text-xs px-2 py-1 rounded\">Pro</span>\n+                    </Button>\n+                  </div>\n+                </div>\n+              )}\n+              \n+              <div className={`min-h-[400px] p-6 text-lg ${activeTab === 'write' ? 'mr-64' : ''}`} style={{ fontSize: '16px', lineHeight: '1.5' }}>\n                 {isLoading ? (\n                   <div className=\"flex items-center justify-center h-full\">\n                     <Loader2 className=\"h-6 w-6 animate-spin text-blue-500\" />\n                   </div>\n@@ -352,9 +447,9 @@\n                     onFocus={() => setFocusedArea('target')}\n                     onBlur={() => setFocusedArea(null)}\n                     tabIndex={0}\n                   >\n-                    {resultText || `${operation === 'translate' ? 'Translation' : operation === 'improve' ? 'Improved text' : operation === 'rephrase' ? 'Rephrased text' : 'Summary'} will appear here`}\n+                    {resultText || (activeTab === 'translate' ? 'Translation will appear here' : 'Improved text will appear here')}\n                   </div>\n                 )}\n               </div>\n \n@@ -399,48 +494,9 @@\n                 </div>\n               )}\n             </div>\n           </div>\n-\n-          {/* Bottom Actions */}\n-          <div className=\"mt-6 flex items-center justify-end\">\n-            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n-              <span>Powered by Linguala</span>\n-            </div>\n-          </div>\n-        </div>\n-\n-        {/* Feature showcase */}\n-        <div className=\"mt-12\">\n-          <div className=\"text-center\">\n-            <div className=\"bg-blue-50 rounded-lg p-8 max-w-2xl mx-auto\">\n-              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n-                AI-Powered Text Processing Platform\n-              </h2>\n-              <p className=\"text-gray-600 mb-6\">\n-                Advanced AI tools for translation, writing improvement, rephrasing, and summarization. Professional quality results in seconds.\n-              </p>\n-              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-700\">\n-                <div className=\"text-center\">\n-                  <div className=\"font-semibold\">25+</div>\n-                  <div>Languages</div>\n-                </div>\n-                <div className=\"text-center\">\n-                  <div className=\"font-semibold\">4</div>\n-                  <div>AI Tools</div>\n-                </div>\n-                <div className=\"text-center\">\n-                  <div className=\"font-semibold\">Fast</div>\n-                  <div>Processing</div>\n-                </div>\n-                <div className=\"text-center\">\n-                  <div className=\"font-semibold\">Secure</div>\n-                  <div>& Private</div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n+        </Tabs>\n       </main>\n     </div>\n   )\n }\n\\ No newline at end of file\n"
    },
    "title": "components/linguala-translator.tsx",
    "time": {
      "start": 1759685000462,
      "end": 1759685000526
    }
  }
}
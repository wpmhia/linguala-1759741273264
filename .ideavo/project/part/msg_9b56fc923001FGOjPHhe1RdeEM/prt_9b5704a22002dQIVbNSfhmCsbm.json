{
  "id": "prt_9b5704a22002dQIVbNSfhmCsbm",
  "messageID": "msg_9b56fc923001FGOjPHhe1RdeEM",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01Sp3HGuY38HJRNdSTh4GnwH",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/hooks/use-translation.ts"
    },
    "output": "<file>\n00001| import { useMutation, useQueryClient } from '@tanstack/react-query'\n00002| import axios from 'axios'\n00003| \n00004| interface ProcessingRequest {\n00005|   text: string\n00006|   operation?: 'translate' | 'improve' | 'rephrase' | 'summarize'\n00007|   sourceLang?: string\n00008|   targetLang?: string\n00009|   domain?: string\n00010|   glossary?: Array<{ source: string; target: string }>\n00011| }\n00012| \n00013| interface ProcessingResponse {\n00014|   operation: string\n00015|   translatedText?: string\n00016|   improvedText?: string\n00017|   rephrasedText?: string\n00018|   summaryText?: string\n00019|   originalText?: string\n00020|   sourceLang?: string\n00021|   targetLang?: string\n00022|   fallback?: boolean\n00023| }\n00024| \n00025| export function useTextProcessing() {\n00026|   const queryClient = useQueryClient()\n00027| \n00028|   return useMutation<ProcessingResponse, Error, ProcessingRequest>({\n00029|     mutationFn: async (request) => {\n00030|       const response = await axios.post('/api/translate', request, {\n00031|         timeout: 30000, // 30 second timeout for processing\n00032|       })\n00033|       return response.data\n00034|     },\n00035|     onSuccess: (data, variables) => {\n00036|       // Cache the processing result\n00037|       const cacheKey = `${variables.operation}-${variables.text}-${variables.sourceLang || ''}-${variables.targetLang || ''}`\n00038|       queryClient.setQueryData(['processing', cacheKey], data)\n00039|     },\n00040|     onError: (error) => {\n00041|       console.error('Text processing failed:', error)\n00042|     },\n00043|   })\n00044| }\n00045| \n00046| // Keep the old hook for backward compatibility\n00047| export function useTranslation() {\n00048|   return useTextProcessing()\n00049| }\n</file>",
    "metadata": {
      "preview": "import { useMutation, useQueryClient } from '@tanstack/react-query'\nimport axios from 'axios'\n\ninterface ProcessingRequest {\n  text: string\n  operation?: 'translate' | 'improve' | 'rephrase' | 'summarize'\n  sourceLang?: string\n  targetLang?: string\n  domain?: string\n  glossary?: Array<{ source: string; target: string }>\n}\n\ninterface ProcessingResponse {\n  operation: string\n  translatedText?: string\n  improvedText?: string\n  rephrasedText?: string\n  summaryText?: string\n  originalText?: string\n  sourceLang?: string"
    },
    "title": "hooks/use-translation.ts",
    "time": {
      "start": 1759685659702,
      "end": 1759685659704
    }
  }
}
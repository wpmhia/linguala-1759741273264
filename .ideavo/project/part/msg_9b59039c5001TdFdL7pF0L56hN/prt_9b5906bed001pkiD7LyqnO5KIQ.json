{
  "id": "prt_9b5906bed001pkiD7LyqnO5KIQ",
  "messageID": "msg_9b59039c5001TdFdL7pF0L56hN",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_018r5RSLNH8kh93jjNLt5zWs",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/components/linguala-translator.tsx"
    },
    "output": "<file>\n00001| \"use client\"\n00002| \n00003| import { useState, useEffect, useRef, useCallback } from \"react\"\n00004| import dynamic from \"next/dynamic\"\n00005| import { Button } from \"@/components/ui/button\"\n00006| import { Textarea } from \"@/components/ui/textarea\"\n00007| import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n00008| import { Switch } from \"@/components/ui/switch\"\n00009| import { Label } from \"@/components/ui/label\"\n00010| import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n00011| import { Drawer, DrawerContent, DrawerTrigger } from \"@/components/ui/drawer\"\n00012| import { \n00013|   ArrowUpDown, Copy, Volume2, Star, MoreHorizontal,\n00014|   Check, X, Mic, Settings, History, Loader2, Languages, FileText\n00015| } from \"lucide-react\"\n00016| import { toast } from \"sonner\"\n00017| import { LingualaLogo } from \"@/components/ui/linguala-logo\"\n00018| import { useTextProcessing } from \"@/hooks/use-translation\"\n00019| import { ThemeToggle } from \"@/components/theme-toggle\"\n00020| import { SettingsModal } from \"@/components/settings-modal\"\n00021| import { useSettings } from \"@/components/providers/settings-provider\"\n00022| \n00023| // Dynamic imports for code splitting\n00024| const TranslatePanel = dynamic(() => import('./translate-panel'), {\n00025|   loading: () => (\n00026|     <div className=\"h-20 linguala-glass rounded-2xl linguala-shimmer border border-white/20 dark:border-white/10 flex items-center justify-center\">\n00027|       <div className=\"flex items-center space-x-2\">\n00028|         <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\" />\n00029|         <div className=\"w-2 h-2 bg-purple-500 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}} />\n00030|         <div className=\"w-2 h-2 bg-cyan-500 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}} />\n00031|       </div>\n00032|     </div>\n00033|   )\n00034| })\n00035| \n00036| const WritePanel = dynamic(() => import('./write-panel'), {\n00037|   loading: () => (\n00038|     <div className=\"h-20 linguala-glass rounded-2xl linguala-shimmer border border-white/20 dark:border-white/10 flex items-center justify-center\">\n00039|       <div className=\"flex items-center space-x-2\">\n00040|         <div className=\"w-2 h-2 bg-purple-500 rounded-full animate-bounce\" />\n00041|         <div className=\"w-2 h-2 bg-pink-500 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}} />\n00042|         <div className=\"w-2 h-2 bg-violet-500 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}} />\n00043|       </div>\n00044|     </div>\n00045|   )\n00046| })\n00047| \n00048| // Types for request payload\n00049| type TranslateRequest = {\n00050|   operation: 'translate'\n00051|   text: string\n00052|   sourceLang: string\n00053|   targetLang: string\n00054| }\n00055| \n00056| type ImproveRequest = {\n00057|   operation: 'improve'\n00058|   text: string\n00059|   correctionsOnly: boolean\n00060|   writingStyle: string\n00061|   tone: string\n00062| }\n00063| \n00064| type ProcessingRequest = TranslateRequest | ImproveRequest\n00065| \n00066| // Constants\n00067| const MAX_INPUT_LENGTH = 10000 // 10KB limit\n00068| \n00069| \n00070| \n00071| // Editing tools sidebar component for reuse\n00072| function EditingToolsSidebar({ \n00073|   correctionsOnly, \n00074|   setCorrectionsOnly, \n00075|   writingStyle, \n00076|   setWritingStyle, \n00077|   tone, \n00078|   setTone \n00079| }: {\n00080|   correctionsOnly: boolean\n00081|   setCorrectionsOnly: (value: boolean) => void\n00082|   writingStyle: string\n00083|   setWritingStyle: (value: string) => void\n00084|   tone: string\n00085|   setTone: (value: string) => void\n00086| }) {\n00087|   return (\n00088|     <div className=\"p-4 bg-gradient-to-br from-purple-50/50 to-pink-50/50 dark:from-purple-950/20 dark:to-pink-950/20\">\n00089|       <div className=\"text-sm font-medium text-purple-700 dark:text-purple-300 mb-4 flex items-center gap-2\">\n00090|         âœ¨ Editing tools\n00091|       </div>\n00092|       \n00093|       <div className=\"space-y-4\">\n00094|         <div className=\"flex items-center justify-between\">\n00095|           <div className=\"flex items-center gap-2\">\n00096|             <Check className=\"h-4 w-4 text-green-500\" />\n00097|             <span className=\"text-sm\">Corrections only</span>\n00098|           </div>\n00099|           <Switch checked={correctionsOnly} onCheckedChange={setCorrectionsOnly} />\n00100|         </div>\n00101|         \n00102|         <div className=\"space-y-2\">\n00103|           <div className=\"flex items-center gap-2\">\n00104|             <FileText className=\"h-4 w-4\" />\n00105|             <span className=\"text-sm font-medium\">Styles</span>\n00106|           </div>\n00107|           <Select value={`${writingStyle}-${tone}`} onValueChange={(value) => {\n00108|             const [style, toneValue] = value.split('-')\n00109|             setWritingStyle(style)\n00110|             setTone(toneValue)\n00111|           }}>\n00112|             <SelectTrigger className=\"text-sm\">\n00113|               <SelectValue placeholder=\"None set\" />\n00114|             </SelectTrigger>\n00115|             <SelectContent>\n00116|               <SelectItem value=\"simple-friendly\">Simple & Friendly</SelectItem>\n00117|               <SelectItem value=\"business-confident\">Business & Confident</SelectItem>\n00118|               <SelectItem value=\"casual-enthusiastic\">Casual & Enthusiastic</SelectItem>\n00119|               <SelectItem value=\"academic-diplomatic\">Academic & Diplomatic</SelectItem>\n00120|             </SelectContent>\n00121|           </Select>\n00122|         </div>\n00123|         \n00124|         <div className=\"flex items-center gap-2 text-sm text-slate-500 dark:text-slate-400\">\n00125|           <Settings className=\"h-4 w-4\" />\n00126|           <span>Show changes</span>\n00127|           <Switch disabled />\n00128|         </div>\n00129|       </div>\n00130|       \n00131|       <div className=\"mt-8\">\n00132|         <div className=\"text-sm font-medium text-purple-700 dark:text-purple-300 mb-2\">ðŸŽ¨ Customizations</div>\n00133|         <Button variant=\"outline\" className=\"w-full text-sm bg-white/50 dark:bg-slate-800/50 border-purple-200 dark:border-purple-700 hover:bg-purple-50 dark:hover:bg-purple-950/50 transition-all duration-300\">\n00134|           <Settings className=\"h-4 w-4 mr-2\" />\n00135|           Custom rules\n00136|           <span className=\"ml-auto bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs px-2 py-1 rounded-full\">Pro</span>\n00137|         </Button>\n00138|       </div>\n00139|     </div>\n00140|   )\n00141| }\n00142| \n00143| export default function LingualaTranslator() {\n00144|   // Core processing state\n00145|   const [sourceText, setSourceText] = useState(\"\")\n00146|   const [resultText, setResultText] = useState(\"\")\n00147|   const [activeTab, setActiveTab] = useState(\"translate\")\n00148|   const [sourceLang, setSourceLang] = useState(\"auto\")\n00149|   const [targetLang, setTargetLang] = useState(\"en\")\n00150|   \n00151|   // Write mode settings\n00152|   const [correctionsOnly, setCorrectionsOnly] = useState(false)\n00153|   const [writingStyle, setWritingStyle] = useState(\"simple\")\n00154|   const [tone, setTone] = useState(\"friendly\")\n00155|   \n00156|   // UI state\n00157|   const [focusedArea, setFocusedArea] = useState<'source' | 'target' | null>(null)\n00158|   const [justCopied, setJustCopied] = useState(false)\n00159|   const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n00160| \n00161|   // Request management\n00162|   const controllerRef = useRef<AbortController>()\n00163| \n00164|   // React Query hook\n00165|   const processing = useTextProcessing()\n00166| \n00167| \n00168| \n00169|   const getPlaceholderText = () => {\n00170|     if (activeTab === 'translate') {\n00171|       return 'Enter text to translate'\n00172|     } else {\n00173|       return 'Type or paste text to see ideas for improvement.\\n\\nClick any word for alternatives or to rephrase a sentence.'\n00174|     }\n00175|   }\n00176| \n00177|   const handleSourceTextChange = (text: string) => {\n00178|     setSourceText(text)\n00179|     if (text.trim()) {\n00180|       handleProcessing(text)\n00181|     } else {\n00182|       setResultText(\"\")\n00183|     }\n00184|   }\n00185| \n00186|   const handleProcessing = useCallback((text: string) => {\n00187|     // Input length validation\n00188|     if (text.length > MAX_INPUT_LENGTH) {\n00189|       toast.error(`Text too long. Maximum ${MAX_INPUT_LENGTH} characters allowed.`)\n00190|       return\n00191|     }\n00192| \n00193|     // Cancel previous request\n00194|     controllerRef.current?.abort()\n00195|     controllerRef.current = new AbortController()\n00196| \n00197|     // Build typed request\n00198|     const request: ProcessingRequest = activeTab === 'translate' \n00199|       ? {\n00200|           operation: 'translate',\n00201|           text,\n00202|           sourceLang,\n00203|           targetLang\n00204|         }\n00205|       : {\n00206|           operation: 'improve',\n00207|           text,\n00208|           correctionsOnly,\n00209|           writingStyle,\n00210|           tone\n00211|         }\n00212| \n00213|     processing.mutate(request, {\n00214|       onSuccess: (data) => {\n00215|         // Handle different operation results\n00216|         if (data.operation === 'translate') {\n00217|           setResultText(data.translatedText || '')\n00218|         } else if (data.operation === 'improve') {\n00219|           setResultText(data.improvedText || '')\n00220|         } else {\n00221|           setResultText('')\n00222|         }\n00223|         \n00224|         if (data.fallback) {\n00225|           toast.info(\"Using fallback processing\")\n00226|         }\n00227|       },\n00228|       onError: (error: any) => {\n00229|         // Don't show error for aborted requests\n00230|         if (error?.name === 'AbortError') return\n00231|         \n00232|         console.error('Processing error:', error)\n00233|         setResultText(\"Service temporarily unavailable. Please try again later.\")\n00234|         toast.error(\"Processing failed\")\n00235|       }\n00236|     })\n00237|   }, [activeTab, sourceLang, targetLang, correctionsOnly, writingStyle, tone, processing])\n00238| \n00239| \n00240| \n00241|   const swapLanguages = () => {\n00242|     if (sourceLang === \"auto\" || activeTab !== 'translate') return\n00243|     \n00244|     setSourceLang(targetLang)\n00245|     setTargetLang(sourceLang)\n00246|     setSourceText(resultText)\n00247|     setResultText(sourceText)\n00248|   }\n00249| \n00250|   const copyToClipboard = async (text: string) => {\n00251|     try {\n00252|       await navigator.clipboard.writeText(text)\n00253|       setJustCopied(true)\n00254|       toast.success(\"Copied to clipboard!\")\n00255|       setTimeout(() => setJustCopied(false), 2000)\n00256|     } catch (error) {\n00257|       toast.error(\"Failed to copy to clipboard\")\n00258|     }\n00259|   }\n00260| \n00261|   const clearText = () => {\n00262|     setSourceText(\"\")\n00263|     setResultText(\"\")\n00264|   }\n00265| \n00266|   // Auto-process when languages or tab change\n00267|   useEffect(() => {\n00268|     if (sourceText.trim()) {\n00269|       const timeoutId = setTimeout(() => {\n00270|         handleProcessing(sourceText)\n00271|       }, 300) // Debounce\n00272|       \n00273|       return () => clearTimeout(timeoutId)\n00274|     }\n00275|   }, [sourceLang, targetLang, activeTab, correctionsOnly, writingStyle, tone])\n00276| \n00277|   const isLoading = processing.isPending\n00278| \n00279|   return (\n00280|     <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 dark:from-slate-900 dark:via-blue-950 dark:to-indigo-950 transition-colors duration-300\">\n00281|       {/* Animated Background Elements */}\n00282|       <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\n00283|         <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full blur-3xl animate-pulse\" />\n00284|         <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-tr from-cyan-400/20 to-blue-600/20 rounded-full blur-3xl animate-pulse\" style={{animationDelay: '1s'}} />\n00285|         <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-purple-400/10 to-pink-600/10 rounded-full blur-3xl animate-pulse\" style={{animationDelay: '2s'}} />\n00286|       </div>\n00287|       \n00288|       {/* Header */}\n00289|       <header className=\"relative z-10 linguala-blur-bg border-b border-white/20 dark:border-white/10\">\n00290|         <div className=\"max-w-screen-xl mx-auto px-6 py-4\">\n00291|           <div className=\"flex items-center justify-between\">\n00292|             <div className=\"flex items-center space-x-8\">\n00293|               <LingualaLogo size=\"md\" />\n00294|             </div>\n00295|             <div className=\"flex items-center space-x-2\">\n00296|               <button className=\"p-2 text-slate-600 dark:text-slate-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-blue-50 dark:hover:bg-blue-950/50 rounded-full transition-all duration-300 hover:scale-110\" aria-label=\"View history\">\n00297|                 <History className=\"h-5 w-5\" />\n00298|               </button>\n00299|               <button className=\"p-2 text-slate-600 dark:text-slate-300 hover:text-purple-600 dark:hover:text-purple-400 hover:bg-purple-50 dark:hover:bg-purple-950/50 rounded-full transition-all duration-300 hover:scale-110\" aria-label=\"Settings\">\n00300|                 <Settings className=\"h-5 w-5\" />\n00301|               </button>\n00302|               <ThemeToggle />\n00303|             </div>\n00304|           </div>\n00305|         </div>\n00306|       </header>\n00307| \n00308|       <main className=\"relative z-10 max-w-screen-xl mx-auto px-6 py-8\">\n00309|         {/* Tab Navigation */}\n00310|         <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full linguala-animate-in\">\n00311|           <TabsList className=\"grid w-full max-w-md grid-cols-2 mb-8 bg-white/70 dark:bg-slate-800/70 linguala-glass p-1 h-14\">\n00312|             <TabsTrigger \n00313|               value=\"translate\" \n00314|               className=\"flex items-center gap-2 data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-cyan-500 data-[state=active]:text-white data-[state=active]:shadow-lg transition-all duration-300 hover:scale-105 rounded-lg h-12\"\n00315|             >\n00316|               <Languages className=\"h-4 w-4\" />\n00317|               <div className=\"flex flex-col items-start\">\n00318|                 <span className=\"font-medium\">Translate</span>\n00319|                 <span className=\"text-xs opacity-70\">35 languages</span>\n00320|               </div>\n00321|             </TabsTrigger>\n00322|             <TabsTrigger \n00323|               value=\"write\" \n00324|               className=\"flex items-center gap-2 data-[state=active]:bg-gradient-to-r data-[state=active]:from-purple-500 data-[state=active]:to-pink-500 data-[state=active]:text-white data-[state=active]:shadow-lg transition-all duration-300 hover:scale-105 rounded-lg h-12\"\n00325|             >\n00326|               <FileText className=\"h-4 w-4\" />\n00327|               <div className=\"flex flex-col items-start\">\n00328|                 <span className=\"font-medium\">Write</span>\n00329|                 <span className=\"text-xs opacity-70\">AI-powered</span>\n00330|               </div>\n00331|             </TabsTrigger>\n00332|           </TabsList>\n00333| \n00334|           <TabsContent value=\"translate\" className=\"space-y-6\">\n00335|             <TranslatePanel\n00336|               sourceLang={sourceLang}\n00337|               targetLang={targetLang}\n00338|               onSourceLangChange={setSourceLang}\n00339|               onTargetLangChange={setTargetLang}\n00340|               onSwapLanguages={swapLanguages}\n00341|             />\n00342|           </TabsContent>\n00343| \n00344|           <TabsContent value=\"write\" className=\"space-y-6\">\n00345|             <WritePanel\n00346|               correctionsOnly={correctionsOnly}\n00347|               writingStyle={writingStyle}\n00348|               tone={tone}\n00349|               onCorrectionsOnlyChange={setCorrectionsOnly}\n00350|               onWritingStyleChange={setWritingStyle}\n00351|               onToneChange={setTone}\n00352|             />\n00353|           </TabsContent>\n00354| \n00355|           {/* Processing Areas */}\n00356|           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-0 linguala-glass rounded-2xl overflow-hidden linguala-rainbow-border shadow-2xl hover:shadow-3xl transition-all duration-500 linguala-card-hover\">\n00357|             {/* Source Text */}\n00358|             <div className=\"relative group\">\n00359|               <div className=\"border-b border-white/20 dark:border-white/10 lg:border-b-0 lg:border-r lg:border-r-white/20 dark:lg:border-r-white/10 bg-gradient-to-br from-white/50 to-white/30 dark:from-slate-800/50 dark:to-slate-900/30\">\n00360|                 <div className={`absolute inset-0 bg-gradient-to-r transition-opacity duration-300 ${\n00361|                   focusedArea === 'source' \n00362|                     ? 'from-blue-500/10 to-cyan-500/10 opacity-100' \n00363|                     : 'opacity-0'\n00364|                 }`} />\n00365|                 <Textarea\n00366|                   value={sourceText}\n00367|                   onChange={(e) => handleSourceTextChange(e.target.value)}\n00368|                   onFocus={() => setFocusedArea('source')}\n00369|                   onBlur={() => setFocusedArea(null)}\n00370|                   placeholder={getPlaceholderText()}\n00371|                   className=\"min-h-[400px] text-lg border-0 rounded-none resize-none bg-transparent focus:ring-0 focus-visible:ring-0 p-6 relative z-10 linguala-scrollbar placeholder:text-slate-400 dark:placeholder:text-slate-500\"\n00372|                   style={{ fontSize: '16px', lineHeight: '1.5' }}\n00373|                 />\n00374|                 \n00375|                 {/* Source Text Controls */}\n00376|                 <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between z-20\">\n00377|                   <div className=\"flex items-center space-x-2\">\n00378|                     {sourceText && (\n00379|                       <Button\n00380|                         variant=\"ghost\"\n00381|                         size=\"sm\"\n00382|                         onClick={clearText}\n00383|                         className=\"p-2 hover:bg-red-500/20 dark:hover:bg-red-500/30 hover:text-red-600 dark:hover:text-red-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00384|                         aria-label=\"Clear text\"\n00385|                       >\n00386|                         <X className=\"h-4 w-4\" />\n00387|                       </Button>\n00388|                     )}\n00389|                   </div>\n00390|                   \n00391|                   <div className=\"flex items-center space-x-2\">\n00392|                     <Button\n00393|                       variant=\"ghost\"\n00394|                       size=\"sm\"\n00395|                       className=\"p-2 hover:bg-blue-500/20 dark:hover:bg-blue-500/30 hover:text-blue-600 dark:hover:text-blue-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00396|                       disabled\n00397|                       aria-label=\"Voice input (coming soon)\"\n00398|                     >\n00399|                       <Mic className=\"h-4 w-4\" />\n00400|                     </Button>\n00401|                   </div>\n00402|                 </div>\n00403|               </div>\n00404|             </div>\n00405| \n00406|             {/* Result Text */}\n00407|             <div className=\"relative\">\n00408|               {/* Desktop Editing Tools Sidebar */}\n00409|               {activeTab === 'write' && (\n00410|                 <div className=\"hidden lg:block absolute top-0 right-0 w-64 h-full linguala-glass border-l border-white/20 dark:border-white/10\">\n00411|                   <EditingToolsSidebar\n00412|                     correctionsOnly={correctionsOnly}\n00413|                     setCorrectionsOnly={setCorrectionsOnly}\n00414|                     writingStyle={writingStyle}\n00415|                     setWritingStyle={setWritingStyle}\n00416|                     tone={tone}\n00417|                     setTone={setTone}\n00418|                   />\n00419|                 </div>\n00420|               )}\n00421| \n00422|               {/* Mobile Editing Tools Drawer */}\n00423|               {activeTab === 'write' && (\n00424|                 <div className=\"lg:hidden absolute top-4 right-4 z-10\">\n00425|                   <Drawer open={isDrawerOpen} onOpenChange={setIsDrawerOpen}>\n00426|                     <DrawerTrigger asChild>\n00427|                       <Button variant=\"outline\" size=\"sm\" aria-label=\"Edit settings\">\n00428|                         <Settings className=\"h-4 w-4\" />\n00429|                       </Button>\n00430|                     </DrawerTrigger>\n00431|                     <DrawerContent>\n00432|                       <EditingToolsSidebar\n00433|                         correctionsOnly={correctionsOnly}\n00434|                         setCorrectionsOnly={setCorrectionsOnly}\n00435|                         writingStyle={writingStyle}\n00436|                         setWritingStyle={setWritingStyle}\n00437|                         tone={tone}\n00438|                         setTone={setTone}\n00439|                       />\n00440|                     </DrawerContent>\n00441|                   </Drawer>\n00442|                 </div>\n00443|               )}\n00444|               \n00445|               <div className={`min-h-[400px] p-6 text-lg relative ${activeTab === 'write' ? 'lg:mr-64' : ''} bg-gradient-to-br from-white/50 to-white/30 dark:from-slate-800/50 dark:to-slate-900/30`} style={{ fontSize: '16px', lineHeight: '1.5' }}>\n00446|                 <div className={`absolute inset-0 bg-gradient-to-r transition-opacity duration-300 ${focusedArea === 'target' ? 'from-purple-500/10 to-pink-500/10 opacity-100' : 'opacity-0'}`} />\n00447|                 {isLoading ? (\n00448|                   <div className=\"flex items-center justify-center h-full relative z-10\">\n00449|                     <div className=\"flex flex-col items-center space-y-4\">\n00450|                       <div className=\"relative\">\n00451|                         <Loader2 className=\"h-8 w-8 animate-spin text-blue-500\" />\n00452|                         <div className=\"absolute inset-0 h-8 w-8 border-2 border-purple-500/30 rounded-full animate-ping\" />\n00453|                       </div>\n00454|                       <span className=\"text-sm text-slate-600 dark:text-slate-400 animate-pulse\">Processing your text...</span>\n00455|                     </div>\n00456|                   </div>\n00457|                 ) : (\n00458|                   <Textarea\n00459|                     value={resultText || ''}\n00460|                     placeholder={activeTab === 'translate' ? 'âœ¨ Translation will appear here' : 'âœ¨ Improved text will appear here'}\n00461|                     readOnly\n00462|                     onFocus={() => setFocusedArea('target')}\n00463|                     onBlur={() => setFocusedArea(null)}\n00464|                     className={`min-h-[300px] border-0 resize-none bg-transparent focus:ring-0 focus-visible:ring-0 relative z-10 linguala-scrollbar ${!resultText ? 'text-slate-400 dark:text-slate-500' : 'text-slate-900 dark:text-slate-100'}`}\n00465|                     style={{ fontSize: '16px', lineHeight: '1.5' }}\n00466|                     aria-label={activeTab === 'translate' ? 'Translation result' : 'Improved text result'}\n00467|                   />\n00468|                 )}\n00469|               </div>\n00470| \n00471|               {/* Result Text Controls */}\n00472|               {resultText && !isLoading && (\n00473|                 <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between z-20\">\n00474|                   <div className=\"flex items-center space-x-2\">\n00475|                     <Button\n00476|                       variant=\"ghost\"\n00477|                       size=\"sm\"\n00478|                       onClick={() => copyToClipboard(resultText)}\n00479|                       className={`p-2 rounded-full transition-all duration-300 hover:scale-110 linguala-glass ${\n00480|                         justCopied \n00481|                           ? 'bg-green-500/20 text-green-600 dark:text-green-400' \n00482|                           : 'hover:bg-blue-500/20 dark:hover:bg-blue-500/30 hover:text-blue-600 dark:hover:text-blue-400'\n00483|                       }`}\n00484|                       aria-label=\"Copy to clipboard\"\n00485|                     >\n00486|                       {justCopied ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\n00487|                     </Button>\n00488|                     <Button\n00489|                       variant=\"ghost\"\n00490|                       size=\"sm\"\n00491|                       className=\"p-2 hover:bg-purple-500/20 dark:hover:bg-purple-500/30 hover:text-purple-600 dark:hover:text-purple-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00492|                       disabled\n00493|                       aria-label=\"Listen to translation (coming soon)\"\n00494|                     >\n00495|                       <Volume2 className=\"h-4 w-4\" />\n00496|                     </Button>\n00497|                     <Button\n00498|                       variant=\"ghost\"\n00499|                       size=\"sm\"\n00500|                       className=\"p-2 hover:bg-yellow-500/20 dark:hover:bg-yellow-500/30 hover:text-yellow-600 dark:hover:text-yellow-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00501|                       disabled\n00502|                       aria-label=\"Save translation (coming soon)\"\n00503|                     >\n00504|                       <Star className=\"h-4 w-4\" />\n00505|                     </Button>\n00506|                   </div>\n00507|                   \n00508|                   <Button\n00509|                     variant=\"ghost\"\n00510|                     size=\"sm\"\n00511|                     className=\"p-2 hover:bg-slate-500/20 dark:hover:bg-slate-500/30 hover:text-slate-600 dark:hover:text-slate-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00512|                     disabled\n00513|                     aria-label=\"More options (coming soon)\"\n00514|                   >\n00515|                     <MoreHorizontal className=\"h-4 w-4\" />\n00516|                   </Button>\n00517|                 </div>\n00518|               )}\n00519|             </div>\n00520|           </div>\n00521|         </Tabs>\n00522|       </main>\n00523|     </div>\n00524|   )\n00525| }\n</file>",
    "metadata": {
      "preview": "\"use client\"\n\nimport { useState, useEffect, useRef, useCallback } from \"react\"\nimport dynamic from \"next/dynamic\"\nimport { Button } from \"@/components/ui/button\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Label } from \"@/components/ui/label\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Drawer, DrawerContent, DrawerTrigger } from \"@/components/ui/drawer\"\nimport { \n  ArrowUpDown, Copy, Volume2, Star, MoreHorizontal,\n  Check, X, Mic, Settings, History, Loader2, Languages, FileText\n} from \"lucide-react\"\nimport { toast } from \"sonner\"\nimport { LingualaLogo } from \"@/components/ui/linguala-logo\"\nimport { useTextProcessing } from \"@/hooks/use-translation\"\nimport { ThemeToggle } from \"@/components/theme-toggle\"\nimport { SettingsModal } from \"@/components/settings-modal\""
    },
    "title": "components/linguala-translator.tsx",
    "time": {
      "start": 1759687765539,
      "end": 1759687765546
    }
  }
}
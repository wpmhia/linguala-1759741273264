{
  "id": "prt_9b59a57e6001P07nknsx6rxi1O",
  "messageID": "msg_9b599dcac0013Ez7TnIDC4jb8A",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "edit",
  "callID": "toolu_0164tnydZVb1B4y2ooRoy5nW",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/app/api/translate/route.ts",
      "oldString": "// Text improvement function using qwen-max\nasync function improveWritingWithQwen3Max(text: string) {\n  const DASHSCOPE_API_KEY = process.env.DASHSCOPE_API_KEY\n  console.log('Starting qwen-max API call for text:', text.substring(0, 50))\n  \n  // Add timeout wrapper\n  const timeoutPromise = new Promise((_, reject) => {\n    setTimeout(() => reject(new Error('API call timeout after 8 seconds')), 8000)\n  })\n  \n  try {\n    const fetchPromise = fetch('https://dashscope-intl.aliyuncs.com/compatible-mode/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${DASHSCOPE_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'qwen-max',\n        messages: [\n          {\n            role: 'system',\n            content: 'You are a professional writing assistant. Improve the given text by enhancing clarity, grammar, style, and readability while maintaining the original meaning and tone. Fix any grammatical errors, improve word choice, and enhance sentence structure. Return only the improved text without explanations or quotes.'\n          },\n          {\n            role: 'user',\n            content: text\n          }\n        ],\n        max_tokens: 1000,\n        temperature: 0.3\n      })\n    })",
      "newString": "// Text improvement function using qwen-max\nasync function improveWritingWithQwen3Max(text: string, options: { correctionsOnly?: boolean, writingStyle?: string, tone?: string } = {}) {\n  const DASHSCOPE_API_KEY = process.env.DASHSCOPE_API_KEY\n  console.log('Starting qwen-max API call for text:', text.substring(0, 50))\n  console.log('Improvement options:', options)\n  \n  // Build system prompt based on options\n  let systemPrompt = 'You are a professional writing assistant. '\n  \n  if (options.correctionsOnly) {\n    systemPrompt += 'Focus ONLY on correcting grammar, spelling, and punctuation errors. Do not change the style, tone, or word choice unless there are clear errors. '\n  } else {\n    systemPrompt += 'Improve the given text by enhancing clarity, grammar, style, and readability while maintaining the original meaning. '\n    \n    if (options.writingStyle) {\n      switch (options.writingStyle) {\n        case 'simple':\n          systemPrompt += 'Use simple, clear language that is easy to understand. '\n          break\n        case 'business':\n          systemPrompt += 'Use professional, formal business language. '\n          break\n        case 'casual':\n          systemPrompt += 'Use casual, conversational language. '\n          break\n        case 'academic':\n          systemPrompt += 'Use formal, academic language with precise terminology. '\n          break\n      }\n    }\n    \n    if (options.tone) {\n      switch (options.tone) {\n        case 'friendly':\n          systemPrompt += 'Maintain a warm, friendly tone. '\n          break\n        case 'professional':\n          systemPrompt += 'Maintain a professional, courteous tone. '\n          break\n        case 'enthusiastic':\n          systemPrompt += 'Maintain an enthusiastic, energetic tone. '\n          break\n        case 'diplomatic':\n          systemPrompt += 'Maintain a diplomatic, tactful tone. '\n          break\n      }\n    }\n  }\n  \n  systemPrompt += 'Return only the improved text without explanations, quotes, or additional commentary.'\n  \n  // Add timeout wrapper\n  const timeoutPromise = new Promise((_, reject) => {\n    setTimeout(() => reject(new Error('API call timeout after 10 seconds')), 10000)\n  })\n  \n  try {\n    const fetchPromise = fetch('https://dashscope-intl.aliyuncs.com/compatible-mode/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${DASHSCOPE_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'qwen-max',\n        messages: [\n          {\n            role: 'system',\n            content: systemPrompt\n          },\n          {\n            role: 'user',\n            content: text\n          }\n        ],\n        max_tokens: 1000,\n        temperature: options.correctionsOnly ? 0.1 : 0.3\n      })\n    })"
    },
    "output": "",
    "metadata": {
      "diagnostics": {},
      "diff": "Index: /home/user/project/app/api/translate/route.ts\n===================================================================\n--- /home/user/project/app/api/translate/route.ts\n+++ /home/user/project/app/api/translate/route.ts\n@@ -97,15 +97,61 @@\n   }\n }\n \n // Text improvement function using qwen-max\n-async function improveWritingWithQwen3Max(text: string) {\n+async function improveWritingWithQwen3Max(text: string, options: { correctionsOnly?: boolean, writingStyle?: string, tone?: string } = {}) {\n   const DASHSCOPE_API_KEY = process.env.DASHSCOPE_API_KEY\n   console.log('Starting qwen-max API call for text:', text.substring(0, 50))\n+  console.log('Improvement options:', options)\n   \n+  // Build system prompt based on options\n+  let systemPrompt = 'You are a professional writing assistant. '\n+  \n+  if (options.correctionsOnly) {\n+    systemPrompt += 'Focus ONLY on correcting grammar, spelling, and punctuation errors. Do not change the style, tone, or word choice unless there are clear errors. '\n+  } else {\n+    systemPrompt += 'Improve the given text by enhancing clarity, grammar, style, and readability while maintaining the original meaning. '\n+    \n+    if (options.writingStyle) {\n+      switch (options.writingStyle) {\n+        case 'simple':\n+          systemPrompt += 'Use simple, clear language that is easy to understand. '\n+          break\n+        case 'business':\n+          systemPrompt += 'Use professional, formal business language. '\n+          break\n+        case 'casual':\n+          systemPrompt += 'Use casual, conversational language. '\n+          break\n+        case 'academic':\n+          systemPrompt += 'Use formal, academic language with precise terminology. '\n+          break\n+      }\n+    }\n+    \n+    if (options.tone) {\n+      switch (options.tone) {\n+        case 'friendly':\n+          systemPrompt += 'Maintain a warm, friendly tone. '\n+          break\n+        case 'professional':\n+          systemPrompt += 'Maintain a professional, courteous tone. '\n+          break\n+        case 'enthusiastic':\n+          systemPrompt += 'Maintain an enthusiastic, energetic tone. '\n+          break\n+        case 'diplomatic':\n+          systemPrompt += 'Maintain a diplomatic, tactful tone. '\n+          break\n+      }\n+    }\n+  }\n+  \n+  systemPrompt += 'Return only the improved text without explanations, quotes, or additional commentary.'\n+  \n   // Add timeout wrapper\n   const timeoutPromise = new Promise((_, reject) => {\n-    setTimeout(() => reject(new Error('API call timeout after 8 seconds')), 8000)\n+    setTimeout(() => reject(new Error('API call timeout after 10 seconds')), 10000)\n   })\n   \n   try {\n     const fetchPromise = fetch('https://dashscope-intl.aliyuncs.com/compatible-mode/v1/chat/completions', {\n@@ -118,17 +164,17 @@\n         model: 'qwen-max',\n         messages: [\n           {\n             role: 'system',\n-            content: 'You are a professional writing assistant. Improve the given text by enhancing clarity, grammar, style, and readability while maintaining the original meaning and tone. Fix any grammatical errors, improve word choice, and enhance sentence structure. Return only the improved text without explanations or quotes.'\n+            content: systemPrompt\n           },\n           {\n             role: 'user',\n             content: text\n           }\n         ],\n         max_tokens: 1000,\n-        temperature: 0.3\n+        temperature: options.correctionsOnly ? 0.1 : 0.3\n       })\n     })\n     \n     console.log('Waiting for API response...')\n"
    },
    "title": "app/api/translate/route.ts",
    "time": {
      "start": 1759688429358,
      "end": 1759688429380
    }
  }
}
{
  "id": "prt_9b5c117ce001431flRP36moAnc",
  "messageID": "msg_9b5bc17dc001nQdxSSC1u5tYv4",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_019BYZyVYKhrHrsdzrXU2icF",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/components/linguala-translator.tsx",
      "offset": 240,
      "limit": 30
    },
    "output": "<file>\n00241|       onError: (error: any) => {\n00242|         // Don't show error for aborted requests\n00243|         if (error?.name === 'AbortError') return\n00244|         \n00245|         console.error('Processing error:', error)\n00246|         setResultText(\"Service temporarily unavailable. Please try again later.\")\n00247|         toast.error(\"Processing failed\")\n00248|       }\n00249|     })\n00250|   }, [activeTab, sourceLang, targetLang, correctionsOnly, writingStyle, tone, processing])\n00251| \n00252| \n00253| \n00254|   const swapLanguages = () => {\n00255|     if (sourceLang === \"auto\" || activeTab !== 'translate') return\n00256|     \n00257|     setSourceLang(targetLang)\n00258|     setTargetLang(sourceLang)\n00259|     setSourceText(resultText)\n00260|     setResultText(sourceText)\n00261|   }\n00262| \n00263|   const copyToClipboard = async (text: string) => {\n00264|     try {\n00265|       await navigator.clipboard.writeText(text)\n00266|       setJustCopied(true)\n00267|       toast.success(\"Copied to clipboard!\")\n00268|       setTimeout(() => setJustCopied(false), 2000)\n00269|     } catch (error) {\n00270|       toast.error(\"Failed to copy to clipboard\")\n\n(File has more lines. Use 'offset' parameter to read beyond line 270)\n</file>",
    "metadata": {
      "preview": "      onError: (error: any) => {\n        // Don't show error for aborted requests\n        if (error?.name === 'AbortError') return\n        \n        console.error('Processing error:', error)\n        setResultText(\"Service temporarily unavailable. Please try again later.\")\n        toast.error(\"Processing failed\")\n      }\n    })\n  }, [activeTab, sourceLang, targetLang, correctionsOnly, writingStyle, tone, processing])\n\n\n\n  const swapLanguages = () => {\n    if (sourceLang === \"auto\" || activeTab !== 'translate') return\n    \n    setSourceLang(targetLang)\n    setTargetLang(sourceLang)\n    setSourceText(resultText)\n    setResultText(sourceText)"
    },
    "title": "components/linguala-translator.tsx",
    "time": {
      "start": 1759690955826,
      "end": 1759690955828
    }
  }
}
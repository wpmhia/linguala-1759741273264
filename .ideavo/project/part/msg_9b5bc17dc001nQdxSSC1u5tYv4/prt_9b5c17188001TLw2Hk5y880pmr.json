{
  "id": "prt_9b5c17188001TLw2Hk5y880pmr",
  "messageID": "msg_9b5bc17dc001nQdxSSC1u5tYv4",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_014DyoxrQVxfV6DJcDeykcPe",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/hooks/use-translation.ts",
      "offset": 1,
      "limit": 50
    },
    "output": "<file>\n00002| import axios from 'axios'\n00003| \n00004| interface ProcessingRequest {\n00005|   text: string\n00006|   operation?: 'translate' | 'improve' | 'rephrase' | 'summarize'\n00007|   sourceLang?: string\n00008|   targetLang?: string\n00009|   domain?: string\n00010|   glossary?: Array<{ source: string; target: string }>\n00011| }\n00012| \n00013| interface ProcessingResponse {\n00014|   operation: string\n00015|   translatedText?: string\n00016|   improvedText?: string\n00017|   rephrasedText?: string\n00018|   summaryText?: string\n00019|   originalText?: string\n00020|   sourceLang?: string\n00021|   targetLang?: string\n00022|   fallback?: boolean\n00023| }\n00024| \n00025| // Retry helper with exponential backoff\n00026| async function retryWithBackoff<T>(\n00027|   fn: () => Promise<T>,\n00028|   maxRetries: number = 3,\n00029|   baseDelay: number = 1000\n00030| ): Promise<T> {\n00031|   let lastError: Error | undefined\n00032| \n00033|   for (let attempt = 0; attempt <= maxRetries; attempt++) {\n00034|     try {\n00035|       return await fn()\n00036|     } catch (error: any) {\n00037|       lastError = error\n00038|       \n00039|       // Don't retry on client errors (400-499) or abort errors\n00040|       if (error.response?.status >= 400 && error.response?.status < 500) {\n00041|         throw error\n00042|       }\n00043|       if (error.name === 'AbortError') {\n00044|         throw error\n00045|       }\n00046|       \n00047|       // Don't retry on last attempt\n00048|       if (attempt === maxRetries) {\n00049|         break\n00050|       }\n00051|       \n\n(File has more lines. Use 'offset' parameter to read beyond line 51)\n</file>",
    "metadata": {
      "preview": "import axios from 'axios'\n\ninterface ProcessingRequest {\n  text: string\n  operation?: 'translate' | 'improve' | 'rephrase' | 'summarize'\n  sourceLang?: string\n  targetLang?: string\n  domain?: string\n  glossary?: Array<{ source: string; target: string }>\n}\n\ninterface ProcessingResponse {\n  operation: string\n  translatedText?: string\n  improvedText?: string\n  rephrasedText?: string\n  summaryText?: string\n  originalText?: string\n  sourceLang?: string\n  targetLang?: string"
    },
    "title": "hooks/use-translation.ts",
    "time": {
      "start": 1759690978363,
      "end": 1759690978364
    }
  }
}
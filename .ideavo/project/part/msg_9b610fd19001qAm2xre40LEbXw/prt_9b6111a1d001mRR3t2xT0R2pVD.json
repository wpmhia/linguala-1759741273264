{
  "id": "prt_9b6111a1d001mRR3t2xT0R2pVD",
  "messageID": "msg_9b610fd19001qAm2xre40LEbXw",
  "sessionID": "ses_65b8a18f2ffeMlgQ4UP0yHPHsm",
  "type": "tool",
  "tool": "read",
  "callID": "toolu_01K5fzQ5WYM6qZpxfmUMtK7m",
  "state": {
    "status": "completed",
    "input": {
      "filePath": "/home/user/project/components/linguala-translator.tsx"
    },
    "output": "<file>\n00001| \"use client\"\n00002| \n00003| import { useState, useEffect, useRef, useCallback } from \"react\"\n00004| import dynamic from \"next/dynamic\"\n00005| import { Button } from \"@/components/ui/button\"\n00006| import { Textarea } from \"@/components/ui/textarea\"\n00007| import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n00008| import { Switch } from \"@/components/ui/switch\"\n00009| import { Label } from \"@/components/ui/label\"\n00010| import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n00011| import { Drawer, DrawerContent, DrawerTrigger } from \"@/components/ui/drawer\"\n00012| import { \n00013|   ArrowUpDown, Copy, Volume2, Star, MoreHorizontal,\n00014|   Check, X, Mic, Settings, History, Loader2, Languages, FileText\n00015| } from \"lucide-react\"\n00016| import { toast } from \"sonner\"\n00017| import { LingualaLogo } from \"@/components/ui/linguala-logo\"\n00018| import { useTextProcessing } from \"@/hooks/use-translation\"\n00019| import { ThemeToggle } from \"@/components/theme-toggle\"\n00020| import { SettingsModal } from \"@/components/settings-modal\"\n00021| import { useSettings } from \"@/components/providers/settings-provider\"\n00022| import { TextDiff } from \"@/components/text-diff\"\n00023| import { InteractiveText } from \"@/components/interactive-text\"\n00024| \n00025| // Dynamic imports for code splitting\n00026| const TranslatePanel = dynamic(() => import('./translate-panel'), {\n00027|   loading: () => (\n00028|     <div className=\"h-20 linguala-glass rounded-2xl linguala-shimmer border border-white/20 dark:border-white/10 flex items-center justify-center\">\n00029|       <div className=\"flex items-center space-x-2\">\n00030|         <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-bounce\" />\n00031|         <div className=\"w-2 h-2 bg-purple-500 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}} />\n00032|         <div className=\"w-2 h-2 bg-cyan-500 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}} />\n00033|       </div>\n00034|     </div>\n00035|   )\n00036| })\n00037| \n00038| const WritePanel = dynamic(() => import('./write-panel'), {\n00039|   loading: () => (\n00040|     <div className=\"h-20 linguala-glass rounded-2xl linguala-shimmer border border-white/20 dark:border-white/10 flex items-center justify-center\">\n00041|       <div className=\"flex items-center space-x-2\">\n00042|         <div className=\"w-2 h-2 bg-purple-500 rounded-full animate-bounce\" />\n00043|         <div className=\"w-2 h-2 bg-pink-500 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}} />\n00044|         <div className=\"w-2 h-2 bg-violet-500 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}} />\n00045|       </div>\n00046|     </div>\n00047|   )\n00048| })\n00049| \n00050| // Types for request payload\n00051| type TranslateRequest = {\n00052|   operation: 'translate'\n00053|   text: string\n00054|   sourceLang: string\n00055|   targetLang: string\n00056| }\n00057| \n00058| type ImproveRequest = {\n00059|   operation: 'improve'\n00060|   text: string\n00061|   correctionsOnly: boolean\n00062|   writingStyle: string\n00063|   tone: string\n00064| }\n00065| \n00066| type ProcessingRequest = TranslateRequest | ImproveRequest\n00067| \n00068| // Constants\n00069| const MAX_INPUT_LENGTH = 10000 // 10KB limit\n00070| \n00071| \n00072| \n00073| // Editing tools sidebar component for reuse\n00074| function EditingToolsSidebar({ \n00075|   correctionsOnly, \n00076|   setCorrectionsOnly, \n00077|   writingStyle, \n00078|   setWritingStyle, \n00079|   tone, \n00080|   setTone,\n00081|   showChanges,\n00082|   setShowChanges\n00083| }: {\n00084|   correctionsOnly: boolean\n00085|   setCorrectionsOnly: (value: boolean) => void\n00086|   writingStyle: string\n00087|   setWritingStyle: (value: string) => void\n00088|   tone: string\n00089|   setTone: (value: string) => void\n00090|   showChanges: boolean\n00091|   setShowChanges: (value: boolean) => void\n00092| }) {\n00093|   return (\n00094|     <div className=\"p-4 bg-gradient-to-br from-purple-50/50 to-pink-50/50 dark:from-purple-950/20 dark:to-pink-950/20\">\n00095|       <div className=\"text-sm font-medium text-purple-700 dark:text-purple-300 mb-4 flex items-center gap-2\">\n00096|         ✨ Editing tools\n00097|       </div>\n00098|       \n00099|       <div className=\"space-y-4\">\n00100|         <div className=\"flex items-center justify-between\">\n00101|           <div className=\"flex items-center gap-2\">\n00102|             <Check className=\"h-4 w-4 text-green-500\" />\n00103|             <span className=\"text-sm\">Corrections only</span>\n00104|           </div>\n00105|           <Switch checked={correctionsOnly} onCheckedChange={setCorrectionsOnly} />\n00106|         </div>\n00107|         \n00108|         <div className=\"space-y-2\">\n00109|           <div className=\"flex items-center gap-2\">\n00110|             <FileText className=\"h-4 w-4\" />\n00111|             <span className=\"text-sm font-medium\">Styles</span>\n00112|           </div>\n00113|           <Select value={`${writingStyle}-${tone}`} onValueChange={(value) => {\n00114|             const [style, toneValue] = value.split('-')\n00115|             setWritingStyle(style)\n00116|             setTone(toneValue)\n00117|           }}>\n00118|             <SelectTrigger className=\"text-sm\">\n00119|               <SelectValue placeholder=\"None set\" />\n00120|             </SelectTrigger>\n00121|             <SelectContent>\n00122|               <SelectItem value=\"simple-friendly\">Simple & Friendly</SelectItem>\n00123|               <SelectItem value=\"business-confident\">Business & Confident</SelectItem>\n00124|               <SelectItem value=\"casual-enthusiastic\">Casual & Enthusiastic</SelectItem>\n00125|               <SelectItem value=\"academic-diplomatic\">Academic & Diplomatic</SelectItem>\n00126|             </SelectContent>\n00127|           </Select>\n00128|         </div>\n00129|         \n00130|         <div className=\"flex items-center justify-between\">\n00131|           <div className=\"flex items-center gap-2\">\n00132|             <Settings className=\"h-4 w-4\" />\n00133|             <span className=\"text-sm\">Show changes</span>\n00134|           </div>\n00135|           <Switch \n00136|             checked={showChanges}\n00137|             onCheckedChange={setShowChanges}\n00138|           />\n00139|         </div>\n00140|       </div>\n00141|       \n00142|       <div className=\"mt-8\">\n00143|         <div className=\"text-sm font-medium text-purple-700 dark:text-purple-300 mb-2\">🎨 Customizations</div>\n00144|         <Button variant=\"outline\" className=\"w-full text-sm bg-white/50 dark:bg-slate-800/50 border-purple-200 dark:border-purple-700 hover:bg-purple-50 dark:hover:bg-purple-950/50 transition-all duration-300\">\n00145|           <Settings className=\"h-4 w-4 mr-2\" />\n00146|           Custom rules\n00147|           <span className=\"ml-auto bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs px-2 py-1 rounded-full\">Pro</span>\n00148|         </Button>\n00149|       </div>\n00150|     </div>\n00151|   )\n00152| }\n00153| \n00154| export default function LingualaTranslator() {\n00155|   // Core processing state\n00156|   const [sourceText, setSourceText] = useState(\"\")\n00157|   const [resultText, setResultText] = useState(\"\")\n00158|   const [activeTab, setActiveTab] = useState(\"translate\")\n00159|   const [sourceLang, setSourceLang] = useState(\"auto\")\n00160|   const [targetLang, setTargetLang] = useState(\"en\")\n00161|   \n00162|   // Write mode settings\n00163|   const [correctionsOnly, setCorrectionsOnly] = useState(false)\n00164|   const [writingStyle, setWritingStyle] = useState(\"simple\")\n00165|   const [tone, setTone] = useState(\"friendly\")\n00166|   const [showChanges, setShowChanges] = useState(false)\n00167|   \n00168|   // UI state\n00169|   const [focusedArea, setFocusedArea] = useState<'source' | 'target' | null>(null)\n00170|   const [justCopied, setJustCopied] = useState(false)\n00171|   const [isDrawerOpen, setIsDrawerOpen] = useState(false)\n00172|   const [isSettingsOpen, setIsSettingsOpen] = useState(false)\n00173| \n00174|   // Request management\n00175|   const controllerRef = useRef<AbortController>()\n00176| \n00177|   // React Query hook\n00178|   const processing = useTextProcessing()\n00179| \n00180| \n00181| \n00182|   const getPlaceholderText = () => {\n00183|     if (activeTab === 'translate') {\n00184|       return 'Enter text to translate.\\n\\nClick any word in the result for alternatives or to rephrase a sentence.'\n00185|     } else {\n00186|       return 'Type or paste text to see ideas for improvement.\\n\\nClick any word for alternatives or to rephrase a sentence.'\n00187|     }\n00188|   }\n00189| \n00190|   const handleSourceTextChange = (text: string) => {\n00191|     setSourceText(text)\n00192|     if (text.trim()) {\n00193|       handleProcessing(text)\n00194|     } else {\n00195|       setResultText(\"\")\n00196|     }\n00197|   }\n00198| \n00199|   const handleProcessing = useCallback((text: string) => {\n00200|     // Input length validation\n00201|     if (text.length > MAX_INPUT_LENGTH) {\n00202|       toast.error(`Text too long. Maximum ${MAX_INPUT_LENGTH} characters allowed.`)\n00203|       return\n00204|     }\n00205| \n00206|     // Cancel previous request\n00207|     controllerRef.current?.abort()\n00208|     controllerRef.current = new AbortController()\n00209| \n00210|     // Build typed request\n00211|     const request: ProcessingRequest = activeTab === 'translate' \n00212|       ? {\n00213|           operation: 'translate',\n00214|           text,\n00215|           sourceLang,\n00216|           targetLang\n00217|         }\n00218|       : {\n00219|           operation: 'improve',\n00220|           text,\n00221|           correctionsOnly,\n00222|           writingStyle,\n00223|           tone\n00224|         }\n00225| \n00226|     processing.mutate(request, {\n00227|       onSuccess: (data) => {\n00228|         // Handle different operation results\n00229|         if (data.operation === 'translate') {\n00230|           setResultText(data.translatedText || '')\n00231|         } else if (data.operation === 'improve') {\n00232|           setResultText(data.improvedText || '')\n00233|         } else {\n00234|           setResultText('')\n00235|         }\n00236|         \n00237|         if (data.fallback) {\n00238|           toast.info(\"Using fallback processing\")\n00239|         }\n00240|       },\n00241|       onError: (error: any) => {\n00242|         // Don't show error for aborted requests\n00243|         if (error?.name === 'AbortError') return\n00244|         \n00245|         console.error('Processing error:', error)\n00246|         setResultText(\"Service temporarily unavailable. Please try again later.\")\n00247|         toast.error(\"Processing failed\")\n00248|       }\n00249|     })\n00250|   }, [activeTab, sourceLang, targetLang, correctionsOnly, writingStyle, tone, processing])\n00251| \n00252| \n00253| \n00254|   const swapLanguages = () => {\n00255|     if (sourceLang === \"auto\" || activeTab !== 'translate') return\n00256|     \n00257|     setSourceLang(targetLang)\n00258|     setTargetLang(sourceLang)\n00259|     setSourceText(resultText)\n00260|     setResultText(sourceText)\n00261|   }\n00262| \n00263|   const copyToClipboard = async (text: string) => {\n00264|     try {\n00265|       await navigator.clipboard.writeText(text)\n00266|       setJustCopied(true)\n00267|       toast.success(\"Copied to clipboard!\")\n00268|       setTimeout(() => setJustCopied(false), 2000)\n00269|     } catch (error) {\n00270|       toast.error(\"Failed to copy to clipboard\")\n00271|     }\n00272|   }\n00273| \n00274|   const clearText = () => {\n00275|     setSourceText(\"\")\n00276|     setResultText(\"\")\n00277|   }\n00278| \n00279|   // Auto-process when languages or tab change\n00280|   useEffect(() => {\n00281|     if (sourceText.trim()) {\n00282|       const timeoutId = setTimeout(() => {\n00283|         handleProcessing(sourceText)\n00284|       }, 300) // Debounce\n00285|       \n00286|       return () => clearTimeout(timeoutId)\n00287|     }\n00288|   }, [sourceLang, targetLang, activeTab, correctionsOnly, writingStyle, tone])\n00289| \n00290|   const isLoading = processing.isPending\n00291| \n00292|   return (\n00293|     <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 dark:from-slate-900 dark:via-blue-950 dark:to-indigo-950 transition-colors duration-300\">\n00294|       {/* Animated Background Elements */}\n00295|       <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\n00296|         <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full blur-3xl animate-pulse\" />\n00297|         <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-tr from-cyan-400/20 to-blue-600/20 rounded-full blur-3xl animate-pulse\" style={{animationDelay: '1s'}} />\n00298|         <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-purple-400/10 to-pink-600/10 rounded-full blur-3xl animate-pulse\" style={{animationDelay: '2s'}} />\n00299|       </div>\n00300|       \n00301|       {/* Header */}\n00302|       <header className=\"relative z-10 linguala-blur-bg border-b border-white/20 dark:border-white/10\">\n00303|         <div className=\"max-w-screen-xl mx-auto px-6 py-4\">\n00304|           <div className=\"flex items-center justify-between\">\n00305|             <div className=\"flex items-center space-x-8\">\n00306|               <LingualaLogo size=\"md\" />\n00307|             </div>\n00308|             <div className=\"flex items-center space-x-2\">\n00309|               <button className=\"p-2 text-slate-600 dark:text-slate-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-blue-50 dark:hover:bg-blue-950/50 rounded-full transition-all duration-300 hover:scale-110\" aria-label=\"View history\">\n00310|                 <History className=\"h-5 w-5\" />\n00311|               </button>\n00312|               <button \n00313|                 onClick={() => setIsSettingsOpen(true)}\n00314|                 className=\"p-2 text-slate-600 dark:text-slate-300 hover:text-purple-600 dark:hover:text-purple-400 hover:bg-purple-50 dark:hover:bg-purple-950/50 rounded-full transition-all duration-300 hover:scale-110\" \n00315|                 aria-label=\"Settings\"\n00316|               >\n00317|                 <Settings className=\"h-5 w-5\" />\n00318|               </button>\n00319|               <ThemeToggle />\n00320|             </div>\n00321|           </div>\n00322|         </div>\n00323|       </header>\n00324| \n00325|       <main className=\"relative z-10 max-w-screen-xl mx-auto px-6 py-8\">\n00326|         {/* Tab Navigation */}\n00327|         <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full linguala-animate-in\">\n00328|           <TabsList className=\"grid w-full max-w-md grid-cols-2 mb-8 bg-white/70 dark:bg-slate-800/70 linguala-glass p-1 h-14\">\n00329|             <TabsTrigger \n00330|               value=\"translate\" \n00331|               className=\"flex items-center gap-2 data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-cyan-500 data-[state=active]:text-white data-[state=active]:shadow-lg transition-all duration-300 hover:scale-105 rounded-lg h-12\"\n00332|             >\n00333|               <Languages className=\"h-4 w-4\" />\n00334|               <div className=\"flex flex-col items-start\">\n00335|                 <span className=\"font-medium\">Translate</span>\n00336|                 <span className=\"text-xs opacity-70\">35 languages</span>\n00337|               </div>\n00338|             </TabsTrigger>\n00339|             <TabsTrigger \n00340|               value=\"write\" \n00341|               className=\"flex items-center gap-2 data-[state=active]:bg-gradient-to-r data-[state=active]:from-purple-500 data-[state=active]:to-pink-500 data-[state=active]:text-white data-[state=active]:shadow-lg transition-all duration-300 hover:scale-105 rounded-lg h-12\"\n00342|             >\n00343|               <FileText className=\"h-4 w-4\" />\n00344|               <div className=\"flex flex-col items-start\">\n00345|                 <span className=\"font-medium\">Write</span>\n00346|                 <span className=\"text-xs opacity-70\">AI-powered</span>\n00347|               </div>\n00348|             </TabsTrigger>\n00349|           </TabsList>\n00350| \n00351|           <TabsContent value=\"translate\" className=\"space-y-6\">\n00352|             <TranslatePanel\n00353|               sourceLang={sourceLang}\n00354|               targetLang={targetLang}\n00355|               onSourceLangChange={setSourceLang}\n00356|               onTargetLangChange={setTargetLang}\n00357|               onSwapLanguages={swapLanguages}\n00358|             />\n00359|           </TabsContent>\n00360| \n00361|           <TabsContent value=\"write\" className=\"space-y-6\">\n00362|             <WritePanel\n00363|               correctionsOnly={correctionsOnly}\n00364|               writingStyle={writingStyle}\n00365|               tone={tone}\n00366|               onCorrectionsOnlyChange={setCorrectionsOnly}\n00367|               onWritingStyleChange={setWritingStyle}\n00368|               onToneChange={setTone}\n00369|             />\n00370|           </TabsContent>\n00371| \n00372|           {/* Processing Areas */}\n00373|           <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-0 linguala-glass rounded-2xl overflow-hidden linguala-rainbow-border shadow-2xl hover:shadow-3xl transition-all duration-500 linguala-card-hover\">\n00374|             {/* Source Text */}\n00375|             <div className=\"relative group\">\n00376|               <div className=\"border-b border-white/20 dark:border-white/10 lg:border-b-0 lg:border-r lg:border-r-white/20 dark:lg:border-r-white/10 bg-gradient-to-br from-white/50 to-white/30 dark:from-slate-800/50 dark:to-slate-900/30\">\n00377|                 <div className={`absolute inset-0 bg-gradient-to-r transition-opacity duration-300 ${\n00378|                   focusedArea === 'source' \n00379|                     ? 'from-blue-500/10 to-cyan-500/10 opacity-100' \n00380|                     : 'opacity-0'\n00381|                 }`} />\n00382|                 <Textarea\n00383|                   value={sourceText}\n00384|                   onChange={(e) => handleSourceTextChange(e.target.value)}\n00385|                   onFocus={() => setFocusedArea('source')}\n00386|                   onBlur={() => setFocusedArea(null)}\n00387|                   placeholder={getPlaceholderText()}\n00388|                   className=\"min-h-[400px] text-lg border-0 rounded-none resize-none bg-transparent focus:ring-0 focus-visible:ring-0 p-6 relative z-10 linguala-scrollbar placeholder:text-slate-400 dark:placeholder:text-slate-500\"\n00389|                   style={{ fontSize: '16px', lineHeight: '1.5' }}\n00390|                 />\n00391|                 \n00392|                 {/* Source Text Controls */}\n00393|                 <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between z-20\">\n00394|                   <div className=\"flex items-center space-x-2\">\n00395|                     {sourceText && (\n00396|                       <Button\n00397|                         variant=\"ghost\"\n00398|                         size=\"sm\"\n00399|                         onClick={clearText}\n00400|                         className=\"p-2 hover:bg-red-500/20 dark:hover:bg-red-500/30 hover:text-red-600 dark:hover:text-red-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00401|                         aria-label=\"Clear text\"\n00402|                       >\n00403|                         <X className=\"h-4 w-4\" />\n00404|                       </Button>\n00405|                     )}\n00406|                   </div>\n00407|                   \n00408|                   <div className=\"flex items-center space-x-2\">\n00409|                     <Button\n00410|                       variant=\"ghost\"\n00411|                       size=\"sm\"\n00412|                       className=\"p-2 hover:bg-blue-500/20 dark:hover:bg-blue-500/30 hover:text-blue-600 dark:hover:text-blue-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00413|                       disabled\n00414|                       aria-label=\"Voice input (coming soon)\"\n00415|                     >\n00416|                       <Mic className=\"h-4 w-4\" />\n00417|                     </Button>\n00418|                   </div>\n00419|                 </div>\n00420|               </div>\n00421|             </div>\n00422| \n00423|             {/* Result Text */}\n00424|             <div className=\"relative\">\n00425|               {/* Desktop Editing Tools Sidebar */}\n00426|               {activeTab === 'write' && (\n00427|                 <div className=\"hidden lg:block absolute top-0 right-0 w-64 h-full linguala-glass border-l border-white/20 dark:border-white/10\">\n00428|                   <EditingToolsSidebar\n00429|                     correctionsOnly={correctionsOnly}\n00430|                     setCorrectionsOnly={setCorrectionsOnly}\n00431|                     writingStyle={writingStyle}\n00432|                     setWritingStyle={setWritingStyle}\n00433|                     tone={tone}\n00434|                     setTone={setTone}\n00435|                     showChanges={showChanges}\n00436|                     setShowChanges={setShowChanges}\n00437|                   />\n00438|                 </div>\n00439|               )}\n00440| \n00441|               {/* Mobile Editing Tools Drawer */}\n00442|               {activeTab === 'write' && (\n00443|                 <div className=\"lg:hidden absolute top-4 right-4 z-10\">\n00444|                   <Drawer open={isDrawerOpen} onOpenChange={setIsDrawerOpen}>\n00445|                     <DrawerTrigger asChild>\n00446|                       <Button variant=\"outline\" size=\"sm\" aria-label=\"Edit settings\">\n00447|                         <Settings className=\"h-4 w-4\" />\n00448|                       </Button>\n00449|                     </DrawerTrigger>\n00450|                     <DrawerContent>\n00451|                       <EditingToolsSidebar\n00452|                         correctionsOnly={correctionsOnly}\n00453|                         setCorrectionsOnly={setCorrectionsOnly}\n00454|                         writingStyle={writingStyle}\n00455|                         setWritingStyle={setWritingStyle}\n00456|                         tone={tone}\n00457|                         setTone={setTone}\n00458|                         showChanges={showChanges}\n00459|                         setShowChanges={setShowChanges}\n00460|                       />\n00461|                     </DrawerContent>\n00462|                   </Drawer>\n00463|                 </div>\n00464|               )}\n00465|               \n00466|               <div className={`min-h-[400px] p-6 text-lg relative ${activeTab === 'write' ? 'lg:mr-64' : ''} bg-gradient-to-br from-white/50 to-white/30 dark:from-slate-800/50 dark:to-slate-900/30`} style={{ fontSize: '16px', lineHeight: '1.5' }}>\n00467|                 <div className={`absolute inset-0 bg-gradient-to-r transition-opacity duration-300 ${focusedArea === 'target' ? 'from-purple-500/10 to-pink-500/10 opacity-100' : 'opacity-0'}`} />\n00468|                 {isLoading ? (\n00469|                   <div className=\"flex items-center justify-center h-full relative z-10\">\n00470|                     <div className=\"flex flex-col items-center space-y-4\">\n00471|                       <div className=\"relative\">\n00472|                         <Loader2 className=\"h-8 w-8 animate-spin text-blue-500\" />\n00473|                         <div className=\"absolute inset-0 h-8 w-8 border-2 border-purple-500/30 rounded-full animate-ping\" />\n00474|                       </div>\n00475|                       <span className=\"text-sm text-slate-600 dark:text-slate-400 animate-pulse\">Processing your text...</span>\n00476|                     </div>\n00477|                   </div>\n00478|                 ) : (\n00479|                   <div className=\"relative z-10\">\n00480|                     {activeTab === 'write' && showChanges && sourceText && resultText ? (\n00481|                       <div className=\"space-y-4\">\n00482|                         <TextDiff \n00483|                           originalText={sourceText}\n00484|                           improvedText={resultText}\n00485|                         />\n00486|                         <div className=\"border-t border-slate-200 dark:border-slate-600 pt-4\">\n00487|                           <h4 className=\"text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\">Final result:</h4>\n00488|                           <div \n00489|                             className={`min-h-[200px] p-3 rounded-lg ${!resultText ? 'text-slate-400 dark:text-slate-500' : 'text-slate-900 dark:text-slate-100'}`}\n00490|                             style={{ fontSize: '16px', lineHeight: '1.5' }}\n00491|                             onFocus={() => setFocusedArea('target')}\n00492|                             onBlur={() => setFocusedArea(null)}\n00493|                           >\n00494|                             {resultText ? (\n00495|                               <InteractiveText\n00496|                                 text={resultText}\n00497|                                 mode={activeTab as 'translate' | 'write'}\n00498|                                 sourceLang={sourceLang}\n00499|                                 targetLang={targetLang}\n00500|                                 onTextUpdate={setResultText}\n00501|                                 className=\"min-h-[180px]\"\n00502|                               />\n00503|                             ) : (\n00504|                               <p className=\"text-slate-400 dark:text-slate-500\">✨ Improved text will appear here</p>\n00505|                             )}\n00506|                           </div>\n00507|                         </div>\n00508|                       </div>\n00509|                     ) : (\n00510|                       <div \n00511|                         className={`min-h-[300px] p-3 rounded-lg ${!resultText ? 'text-slate-400 dark:text-slate-500' : 'text-slate-900 dark:text-slate-100'}`}\n00512|                         style={{ fontSize: '16px', lineHeight: '1.5' }}\n00513|                         onFocus={() => setFocusedArea('target')}\n00514|                         onBlur={() => setFocusedArea(null)}\n00515|                       >\n00516|                         {resultText ? (\n00517|                           <InteractiveText\n00518|                             text={resultText}\n00519|                             mode={activeTab as 'translate' | 'write'}\n00520|                             sourceLang={sourceLang}\n00521|                             targetLang={targetLang}\n00522|                             onTextUpdate={setResultText}\n00523|                             className=\"min-h-[280px]\"\n00524|                           />\n00525|                         ) : (\n00526|                           <p className=\"text-slate-400 dark:text-slate-500\">\n00527|                             {activeTab === 'translate' ? '✨ Translation will appear here' : '✨ Improved text will appear here'}\n00528|                           </p>\n00529|                         )}\n00530|                       </div>\n00531|                     )}\n00532|                   </div>\n00533|                 )}\n00534|               </div>\n00535| \n00536|               {/* Result Text Controls */}\n00537|               {resultText && !isLoading && (\n00538|                 <div className=\"absolute bottom-4 left-4 right-4 flex items-center justify-between z-20\">\n00539|                   <div className=\"flex items-center space-x-2\">\n00540|                     <Button\n00541|                       variant=\"ghost\"\n00542|                       size=\"sm\"\n00543|                       onClick={() => copyToClipboard(resultText)}\n00544|                       className={`p-2 rounded-full transition-all duration-300 hover:scale-110 linguala-glass ${\n00545|                         justCopied \n00546|                           ? 'bg-green-500/20 text-green-600 dark:text-green-400' \n00547|                           : 'hover:bg-blue-500/20 dark:hover:bg-blue-500/30 hover:text-blue-600 dark:hover:text-blue-400'\n00548|                       }`}\n00549|                       aria-label=\"Copy to clipboard\"\n00550|                     >\n00551|                       {justCopied ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\n00552|                     </Button>\n00553|                     <Button\n00554|                       variant=\"ghost\"\n00555|                       size=\"sm\"\n00556|                       className=\"p-2 hover:bg-purple-500/20 dark:hover:bg-purple-500/30 hover:text-purple-600 dark:hover:text-purple-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00557|                       disabled\n00558|                       aria-label=\"Listen to translation (coming soon)\"\n00559|                     >\n00560|                       <Volume2 className=\"h-4 w-4\" />\n00561|                     </Button>\n00562|                     <Button\n00563|                       variant=\"ghost\"\n00564|                       size=\"sm\"\n00565|                       className=\"p-2 hover:bg-yellow-500/20 dark:hover:bg-yellow-500/30 hover:text-yellow-600 dark:hover:text-yellow-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00566|                       disabled\n00567|                       aria-label=\"Save translation (coming soon)\"\n00568|                     >\n00569|                       <Star className=\"h-4 w-4\" />\n00570|                     </Button>\n00571|                   </div>\n00572|                   \n00573|                   <Button\n00574|                     variant=\"ghost\"\n00575|                     size=\"sm\"\n00576|                     className=\"p-2 hover:bg-slate-500/20 dark:hover:bg-slate-500/30 hover:text-slate-600 dark:hover:text-slate-400 rounded-full transition-all duration-300 hover:scale-110 linguala-glass\"\n00577|                     disabled\n00578|                     aria-label=\"More options (coming soon)\"\n00579|                   >\n00580|                     <MoreHorizontal className=\"h-4 w-4\" />\n00581|                   </Button>\n00582|                 </div>\n00583|               )}\n00584|             </div>\n00585|           </div>\n00586|         </Tabs>\n00587|       </main>\n00588| \n00589|       {/* Settings Modal */}\n00590|       <SettingsModal \n00591|         open={isSettingsOpen} \n00592|         onOpenChange={setIsSettingsOpen} \n00593|       />\n00594| \n00595|       {/* Footer */}\n00596|       <footer className=\"relative z-10 mt-16 pb-8\">\n00597|         <div className=\"max-w-screen-xl mx-auto px-6\">\n00598|           <div className=\"text-center\">\n00599|             <p className=\"text-slate-600 dark:text-slate-400 text-sm\">\n00600|               Made with ❤️ in Europe\n00601|             </p>\n00602|           </div>\n00603|         </div>\n00604|       </footer>\n00605|     </div>\n00606|   )\n00607| }\n</file>",
    "metadata": {
      "preview": "\"use client\"\n\nimport { useState, useEffect, useRef, useCallback } from \"react\"\nimport dynamic from \"next/dynamic\"\nimport { Button } from \"@/components/ui/button\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Label } from \"@/components/ui/label\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Drawer, DrawerContent, DrawerTrigger } from \"@/components/ui/drawer\"\nimport { \n  ArrowUpDown, Copy, Volume2, Star, MoreHorizontal,\n  Check, X, Mic, Settings, History, Loader2, Languages, FileText\n} from \"lucide-react\"\nimport { toast } from \"sonner\"\nimport { LingualaLogo } from \"@/components/ui/linguala-logo\"\nimport { useTextProcessing } from \"@/hooks/use-translation\"\nimport { ThemeToggle } from \"@/components/theme-toggle\"\nimport { SettingsModal } from \"@/components/settings-modal\""
    },
    "title": "components/linguala-translator.tsx",
    "time": {
      "start": 1759696199029,
      "end": 1759696199034
    }
  }
}